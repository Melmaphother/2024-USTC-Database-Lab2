{
  "name": "Database Lab2 银行管理系统",
  "describe": "Database Lab2 银行管理系统",
  "avatar": "",
  "version": "4.9.2",
  "createdTime": "2024-5-18 22:27:47",
  "updatedTime": "2024-5-20 12:01:37",
  "dbConns": [],
  "profile": {
    "default": {
      "db": "29D1CE08-4C35-4D2D-AAA9-23D93305B52E",
      "dbConn": "AEE65DA9-0212-404E-8DB0-5BE6C11D986B",
      "entityInitFields": [],
      "entityInitProperties": {
        "partitioned by": "(date string)",
        "row format delimited": "",
        "fields terminated by ','": "",
        "collection items terminated by '-'": "",
        "map keys terminated by ':'": "",
        "store as textfile;": ""
      }
    },
    "javaHome": "",
    "sql": {
      "delimiter": ""
    },
    "dataTypeSupports": [
      {
        "defKey": "MYSQL",
        "id": "29D1CE08-4C35-4D2D-AAA9-23D93305B52E"
      },
      {
        "defKey": "ORACLE",
        "id": "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542"
      },
      {
        "defKey": "SQLServer",
        "id": "BFC87171-C74F-494A-B7C2-76B9C55FACC9"
      },
      {
        "defKey": "PostgreSQL",
        "id": "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022"
      },
      {
        "defKey": "DB2",
        "id": "89504F5D-94BF-4C9E-8B2E-44F37305FED5"
      },
      {
        "defKey": "DM",
        "id": "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307"
      },
      {
        "defKey": "GaussDB",
        "id": "592C7013-143D-4E7B-AF64-0D7BF1E28230"
      },
      {
        "defKey": "Kingbase",
        "id": "77BD85E5-9D0D-4096-8427-CBA306FC9C6A"
      },
      {
        "defKey": "GBase",
        "id": "56F4B55B-F0B8-4049-9E6B-50B95C1D793A"
      },
      {
        "defKey": "MaxCompute",
        "id": "11D1FB71-A587-4217-89BA-611B8A1F83E0"
      },
      {
        "defKey": "SQLite",
        "id": "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1"
      },
      {
        "defKey": "Hive",
        "id": "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2"
      },
      {
        "defKey": "JAVA",
        "id": "797A1496-D649-4261-89B4-544132EC3F36"
      },
      {
        "defKey": "JavaMybatis",
        "id": "895CFD1D-4273-4D32-A2C4-CAC70200AB5B"
      },
      {
        "defKey": "JavaMybatisPlus",
        "id": "A2EE7B4A-CE62-4290-B00C-B26C1BF18073"
      },
      {
        "defKey": "C#",
        "id": "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30"
      },
      {
        "defKey": "Golang",
        "id": "B91D99E0-9B7C-416C-8737-B760957DAF09"
      },
      {
        "defKey": "Rust",
        "id": "BDF457FD-9F98-4AC3-A705-7587B00A3BAB"
      },
      {
        "defKey": "Doris",
        "id": "483F9346-C99E-4014-A1D2-A554606BD8A3"
      },
      {
        "defKey": "HighGo",
        "id": "ABF5836C-0B7C-4007-A41C-F869325E5842"
      }
    ],
    "codeTemplates": [
      {
        "type": "appCode",
        "applyFor": "797A1496-D649-4261-89B4-544132EC3F36",
        " JpaBean": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.entity;\n$blankline\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport javax.persistence.*;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n\n /**\n * {{=it.entity.defName}};{{=it.entity.comment}}\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@ApiModel(value = \"{{=it.entity.defName}}\",description = \"{{=it.entity.comment}}\")\n@Table(name=\"{{=it.entity.defKey}}\")\npublic class {{=beanClass}} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    {{? field.primaryKey }}\n    @Id\n    @GeneratedValue\n    {{?}}\n    @ApiModelProperty(name = \"{{=field.defName}}\",notes = \"{{=field.comment}}\")\n    private {{=field.type}} {{=it.func.camel(field.defKey,false)}} ;\n{{~}}\n$blankline\n\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.defKey,true)}}(){\n        return this.{{=it.func.camel(field.defKey,false)}};\n    }\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public void set{{=it.func.camel(field.defKey,true)}}({{=field.type}} {{= it.func.camel(field.defKey,false) }}){\n        this.{{=it.func.camel(field.defKey,false)}}={{=it.func.camel(field.defKey,false)}};\n    }\n{{~}}\n}"
      },
      {
        "type": "appCode",
        "applyFor": "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30",
        "Default": "using System;\nusing System.Collections.Generic;\n\n$blankline\n{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n}}\n/*\n * @author : http://www.chiner.com.cn\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n * @desc : {{=it.func.join(it.entity.defName,it.entity.comment,'-')}}\n */\nnamespace PDManer.Application\n{\n    public partial class {{=it.func.camel(it.entity.defKey,true) }}\n    {\n    \n        {{~it.entity.fields:field:index}}\n        /// <summary>\n        /// {{=it.func.join(field.defName,field.comment,';')}}\n        /// </summary>\n        public {{=field.type}} {{=it.func.camel(field.defKey,true)}} { get; set; }\n        $blankline\n        {{~}}\n        \n    }\n}",
        "SqlSugar": "using System;\nusing System.Collections.Generic;\nusing SqlSugar;\n\n$blankline\n{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    var sqlSugartable='[SugarTable(\"{{=it.entity.defKey}}\", TableDescription = \"{{=it.func.join(it.entity.defName,it.entity.comment,';')}}\")]';\n}}\n/*\n * @author : xkdong@163.com\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n * @desc : {{=it.func.join(it.entity.defName,it.entity.comment,'-')}}\n */\nnamespace Model.DBModel\n{\n    /// <summary>\n    /// {{=it.func.join(it.entity.defName,it.entity.comment,';')}}\n    /// </summary>\n    {{=sqlSugartable}}\n    public class {{=it.entity.defKey}}\n    {\n        {{~it.entity.fields:field:index}}\n        /// <summary>\n        /// {{=it.func.join(field.defName,field.comment,';')}}\n        /// </summary>\n        {{? field.primaryKey }}\n        [SugarColumn(IsIdentity = true, IsPrimaryKey = true)]\n        {{?}}\n        public {{=field.type}} {{=it.func.camel(field.defKey,true)}}{ get; set; }\n        $blankline\n        {{~}}\n    }\n}"
      },
      {
        "applyFor": "895CFD1D-4273-4D32-A2C4-CAC70200AB5B",
        "type": "appCode",
        "Controller": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.controller;\n$blankline\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageRequest;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.service.{{=serviceClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表控制层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Api(tags = \"{{=it.entity.defName}}对象功能接口\")\n@RestController\n@RequestMapping(\"/{{=it.func.camel(it.entity.defKey,false)}}\")\npublic class {{=beanClass}}Controller{\n    @Autowired\n    private {{=serviceClass}} {{=serviceVarName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    @ApiOperation(\"通过ID查询单条数据\")\n    @GetMapping(\"{{{=it.func.camel(pkVarName,false)}}}\")\n    public ResponseEntity<{{=beanClass}}> queryById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.queryById({{=pkVarName}}));\n    }\n    $blankline\n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    @ApiOperation(\"分页查询\")\n    @GetMapping\n    public ResponseEntity<Page<{{=beanClass}}>> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest){\n        return ResponseEntity.ok({{=serviceVarName}}.paginQuery({{=beanVarName}}, pageRequest));\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"新增数据\")\n    @PostMapping\n    public ResponseEntity<{{=beanClass}}> add({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.insert({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"更新数据\")\n    @PutMapping\n    public ResponseEntity<{{=beanClass}}> edit({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.update({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    @ApiOperation(\"通过主键删除数据\")\n    @DeleteMapping\n    public ResponseEntity<Boolean> deleteById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.deleteById({{=pkVarName}}));\n    }\n}",
        "Service": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.service;\n$blankline\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageRequest;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务接口\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\npublic interface {{=serviceClass}}{\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}});\n    \n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest);\n\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} insert({{=beanClass}} {{=beanVarName}});\n\n    \n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} update({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    boolean deleteById({{=pkDataType}} {{=pkVarName}});\n}",
        "ServiceImpl": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkVarNameU = \"UndefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkVarNameU = it.func.camel(field.defKey,true);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    var mapperName = beanVarName+'Mapper';\n    \n}}package {{=pkgName}}.service.impl;\n$blankline\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageImpl;\nimport org.springframework.data.domain.PageRequest;\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.mapper.{{=beanClass}}Mapper;\nimport {{=pkgName}}.service.{{=serviceClass}};\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务实现类\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Service\npublic class {{=serviceClass}}Impl implements {{=serviceClass}}{\n    @Autowired\n    private {{=beanClass}}Mapper {{=mapperName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    public {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}}){\n        return {{=mapperName}}.queryById({{=pkVarName}});\n    }\n    $blankline\n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    public Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest){\n        long total = {{=mapperName}}.count({{=beanVarName}});\n        return new PageImpl<>({{=mapperName}}.queryAllByLimit({{=beanVarName}}, pageRequest), pageRequest, total);\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} insert({{=beanClass}} {{=beanVarName}}){\n        {{=mapperName}}.insert({{=beanVarName}});\n        return {{=beanVarName}};\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} update({{=beanClass}} {{=beanVarName}}){\n        {{=mapperName}}.update({{=beanVarName}});\n        return queryById({{=beanVarName}}.get{{=pkVarNameU}}());\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    public boolean deleteById({{=pkDataType}} {{=pkVarName}}){\n        int total = {{=mapperName}}.deleteById({{=pkVarName}});\n        return total > 0;\n    }\n}",
        "Mapper": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.mapper;\n$blankline\nimport java.util.List;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Param;\nimport org.springframework.data.domain.Pageable;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表数据库访问层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Mapper\npublic interface {{=beanClass}}Mapper{\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}});\n    \n    /** \n     * 分页查询指定行数据\n     *\n     * @param {{=beanVarName}} 查询条件\n     * @param pageable 分页对象\n     * @return 对象列表\n     */\n    List<{{=beanClass}}> queryAllByLimit({{=beanClass}} {{=beanVarName}}, @Param(\"pageable\") Pageable pageable);\n\n    /** \n     * 统计总行数\n     *\n     * @param {{=beanVarName}} 查询条件\n     * @return 总行数\n     */\n    long count({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 影响行数\n     */\n    int insert({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 批量新增数据\n     *\n     * @param entities List<{{=beanClass}}> 实例对象列表\n     * @return 影响行数\n     */\n    int insertBatch(@Param(\"entities\") List<{{=beanClass}}> entities);\n    \n    /** \n     * 批量新增或按主键更新数据\n     *\n     * @param entities List<{{=beanClass}}> 实例对象列表\n     * @return 影响行数\n     */\n    int insertOrUpdateBatch(@Param(\"entities\") List<{{=beanClass}}> entities);\n    \n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 影响行数\n     */\n    int update({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 影响行数\n     */\n    int deleteById({{=pkDataType}} {{=pkVarName}});\n}",
        "Mapper.xml": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    var pkField = \"UNDEFINED_ID\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkField = field.defKey;\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"{{=pkgName}}.mapper.{{=beanClass}}Mapper\">\n    <resultMap type=\"{{=pkgName}}.entity.{{=beanClass}}\" id=\"{{=beanClass}}Map\">\n    {{~it.entity.fields:field:index}}\n        <result property=\"{{=it.func.camel(field.defKey,false)}}\" column=\"{{=field.defKey}}\" jdbcType=\"{{=field.type}}\"/>\n    {{~}}\n    </resultMap>\n    $blankline\n    <!-- 通过ID查询单条数据 -->\n    <select id=\"queryById\" resultMap=\"{{=beanClass}}Map\">\n        select\n            {{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}}\n        from {{=it.entity.defKey}}\n        where {{=pkField}} = #{{{=pkVarName}}}\n    </select>\n    $blankline\n    <!--分页查询指定行数据-->\n    <select id=\"queryAllByLimit\" resultMap=\"{{=beanClass}}Map\">\n        select\n            {{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}}\n        from {{=it.entity.defKey}}\n        <where>\n        {{~it.entity.fields:field:index}}\n            <if test=\"{{=it.func.camel(field.defKey,false)}} != null and {{=it.func.camel(field.defKey,false)}} != ''\">\n                and {{=field.defKey}} = #{{{=it.func.camel(field.defKey,false)}}}\n            </if>\n        {{~}}\n        </where>\n        limit #{pageable.offset}, #{pageable.pageSize}\n    </select>\n    $blankline\n    <!--统计总行数-->\n    <select id=\"count\" resultType=\"java.lang.Long\">\n        select count(1)\n        from {{=it.entity.defKey}}\n        <where>\n        {{~it.entity.fields:field:index}}\n            <if test=\"{{=it.func.camel(field.defKey,false)}} != null and {{=it.func.camel(field.defKey,false)}} != ''\">\n                and {{=field.defKey}} = #{{{=it.func.camel(field.defKey,false)}}}\n            </if>\n        {{~}}\n        </where>\n    </select>\n    $blankline\n    <!--新增数据-->\n    <insert id=\"insert\" keyProperty=\"{{=pkField}}\" useGeneratedKeys=\"true\">\n        insert into {{=it.entity.defKey}}({{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}})\n        values ({{=it.entity.fields.map(function(e,i){return '#{'+it.func.camel(e.defKey,false)+'}'}).join(',')}})\n    </insert>\n    $blankline\n    <!-- 批量新增数据 -->\n    <insert id=\"insertBatch\" keyProperty=\"{{=pkField}}\" useGeneratedKeys=\"true\">\n        insert into {{=it.entity.defKey}}({{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}})\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n            ({{=it.entity.fields.map(function(e,i){return '#{entity.'+it.func.camel(e.defKey,false)+'}'}).join(',')}})\n        </foreach>\n    </insert>\n    $blankline\n    <!-- 批量新增或按主键更新数据 -->\n    <insert id=\"insertOrUpdateBatch\" keyProperty=\"{{=pkField}}\" useGeneratedKeys=\"true\">\n        insert into {{=it.entity.defKey}}({{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}})\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n            ({{=it.entity.fields.map(function(e,i){return '#{entity.'+it.func.camel(e.defKey,false)+'}'}).join(',')}})\n        </foreach>\n        on duplicate key update\n        {{=it.entity.fields.map(function(e,i){return e.defKey + '=values('+e.defKey+')'}).join(',\\n\\t\\t')}}\n    </insert>\n    $blankline\n    <!-- 更新数据 -->\n    <update id=\"update\">\n        update {{=it.entity.defKey}}\n        <set>\n        {{~it.entity.fields:field:index}}\n            <if test=\"{{=it.func.camel(field.defKey,false)}} != null and {{=it.func.camel(field.defKey,false)}} != ''\">\n                {{=field.defKey}} = #{{{=it.func.camel(field.defKey,false)}}},\n            </if>\n        {{~}}\n        </set>\n        where {{=pkField}} = #{{{=pkVarName}}}\n    </update>\n    $blankline\n    <!--通过主键删除-->\n    <delete id=\"deleteById\">\n        delete from {{=it.entity.defKey}} where {{=pkField}} = #{{{=pkVarName}}}\n    </delete>\n</mapper>\n\n",
        "Entity": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.entity;\n$blankline\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n\n /**\n * {{=it.entity.defName}};{{=it.entity.comment}}\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@ApiModel(value = \"{{=it.entity.defName}}\",description = \"{{=it.entity.comment}}\")\npublic class {{=beanClass}} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    @ApiModelProperty(name = \"{{=field.defName}}\",notes = \"{{=field.comment}}\")\n    private {{=field.type}} {{=it.func.camel(field.defKey,false)}} ;\n{{~}}\n$blankline\n\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.defKey,true)}}(){\n        return this.{{=it.func.camel(field.defKey,false)}};\n    }\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public void set{{=it.func.camel(field.defKey,true)}}({{=field.type}} {{= it.func.camel(field.defKey,false) }}){\n        this.{{=it.func.camel(field.defKey,false)}}={{=it.func.camel(field.defKey,false)}};\n    }\n{{~}}\n}"
      },
      {
        "applyFor": "A2EE7B4A-CE62-4290-B00C-B26C1BF18073",
        "type": "appCode",
        "Controller": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.controller;\n$blankline\nimport java.util.List;\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.domain.PageImpl;\nimport org.springframework.data.domain.PageRequest;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.service.{{=serviceClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表控制层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Api(tags = \"{{=it.entity.defName}}对象功能接口\")\n@RestController\n@RequestMapping(\"/{{=it.func.camel(it.entity.defKey,false)}}\")\npublic class {{=beanClass}}Controller{\n    @Autowired\n    private {{=serviceClass}} {{=serviceVarName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    @ApiOperation(\"通过ID查询单条数据\")\n    @GetMapping(\"{{{=it.func.camel(pkVarName,false)}}}\")\n    public ResponseEntity<{{=beanClass}}> queryById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.queryById({{=pkVarName}}));\n    }\n    $blankline\n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    @ApiOperation(\"分页查询\")\n    @GetMapping\n    public ResponseEntity<PageImpl<{{=beanClass}}>> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest){\n        //1.分页参数\n        long current = pageRequest.getPageNumber();\n        long size = pageRequest.getPageSize();\n\n        //2.分页查询\n        /*把Mybatis的分页对象做封装转换，MP的分页对象上有一些SQL敏感信息，还是通过spring的分页模型来封装数据吧*/\n        com.baomidou.mybatisplus.extension.plugins.pagination.Page<{{=beanClass}}> pageResult = {{=serviceVarName}}.paginQuery({{=beanVarName}}, current,size);\n\n        //3. 分页结果组装\n        List<{{=beanClass}}> dataList = pageResult.getRecords();\n        long total = pageResult.getTotal();\n        PageImpl<{{=beanClass}}> retPage = new PageImpl<{{=beanClass}}>(dataList,pageRequest,total);\n        return ResponseEntity.ok(retPage);\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"新增数据\")\n    @PostMapping\n    public ResponseEntity<{{=beanClass}}> add({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.insert({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"更新数据\")\n    @PutMapping\n    public ResponseEntity<{{=beanClass}}> edit({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.update({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    @ApiOperation(\"通过主键删除数据\")\n    @DeleteMapping\n    public ResponseEntity<Boolean> deleteById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.deleteById({{=pkVarName}}));\n    }\n}",
        "Service": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.service;\n$blankline\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务接口\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\npublic interface {{=serviceClass}}{\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}});\n    $blankline\n    /**\n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param current 当前页码\n     * @param size  每页大小\n     * @return\n     */\n    Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, long current, long size);\n\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} insert({{=beanClass}} {{=beanVarName}});\n\n    \n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} update({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    boolean deleteById({{=pkDataType}} {{=pkVarName}});\n}",
        "ServiceImpl": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkVarNameU = \"UndefinedId\";\n    var pkFieldKey = \"UNDEFINED\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkFieldKey = field.defKey;\n            pkVarName = it.func.camel(field.defKey,false);\n            pkVarNameU = it.func.camel(field.defKey,true);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    var mapperName = beanVarName+'Mapper';\n    \n}}package {{=pkgName}}.service.impl;\n$blankline\nimport cn.hutool.core.util.StrUtil;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;\nimport com.baomidou.mybatisplus.extension.conditions.update.LambdaUpdateChainWrapper;\n\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.mapper.{{=beanClass}}Mapper;\nimport {{=pkgName}}.service.{{=serviceClass}};\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务实现类\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Service\npublic class {{=serviceClass}}Impl implements {{=serviceClass}}{\n    @Autowired\n    private {{=beanClass}}Mapper {{=mapperName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    public {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}}){\n        return {{=mapperName}}.selectById({{=pkVarName}});\n    }\n    $blankline\n    /**\n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param current 当前页码\n     * @param size  每页大小\n     * @return\n     */\n    public Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, long current, long size){\n        //1. 构建动态查询条件\n        LambdaQueryWrapper<{{=beanClass}}> queryWrapper = new LambdaQueryWrapper<>();\n        {{~it.entity.fields.filter(function(e){return e[\"type\"]===\"String\"&&e.defKey !== pkFieldKey}):field:index}}\n        if(StrUtil.isNotBlank({{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}())){\n            queryWrapper.eq({{=beanClass}}::get{{=it.func.camel(field.defKey,true)}}, {{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}());\n        }\n        {{~}}\n\n        //2. 执行分页查询\n        Page<{{=beanClass}}> pagin = new Page<>(current , size , true);\n        IPage<{{=beanClass}}> selectResult = {{=mapperName}}.selectByPage(pagin , queryWrapper);\n        pagin.setPages(selectResult.getPages());\n        pagin.setTotal(selectResult.getTotal());\n        pagin.setRecords(selectResult.getRecords());\n\n        //3. 返回结果\n        return pagin;\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} insert({{=beanClass}} {{=beanVarName}}){\n        {{=mapperName}}.insert({{=beanVarName}});\n        return {{=beanVarName}};\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} update({{=beanClass}} {{=beanVarName}}){\n        //1. 根据条件动态更新\n        LambdaUpdateChainWrapper<{{=beanClass}}> chainWrapper = new LambdaUpdateChainWrapper<{{=beanClass}}>({{=mapperName}});\n        {{~it.entity.fields.filter(function(e){return e[\"type\"]===\"String\"&&e.defKey !== pkFieldKey}):field:index}}\n        if(StrUtil.isNotBlank({{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}())){\n            chainWrapper.eq({{=beanClass}}::get{{=it.func.camel(field.defKey,true)}}, {{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}());\n        }\n        {{~}}\n        //2. 设置主键，并更新\n        chainWrapper.set({{=beanClass}}::get{{=pkVarNameU}}, {{=beanVarName}}.get{{=pkVarNameU}}());\n        boolean ret = chainWrapper.update();\n        //3. 更新成功了，查询最最对象返回\n        if(ret){\n            return queryById({{=beanVarName}}.get{{=pkVarNameU}}());\n        }else{\n            return {{=beanVarName}};\n        }\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    public boolean deleteById({{=pkDataType}} {{=pkVarName}}){\n        int total = {{=mapperName}}.deleteById({{=pkVarName}});\n        return total > 0;\n    }\n}",
        "Mapper": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.mapper;\n$blankline\n\nimport com.baomidou.mybatisplus.core.conditions.Wrapper;\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.core.toolkit.Constants;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Param;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表数据库访问层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Mapper\npublic interface {{=beanClass}}Mapper  extends BaseMapper<{{=beanClass}}>{\n    /** \n     * 分页查询指定行数据\n     *\n     * @param page 分页参数\n     * @param wrapper 动态查询条件\n     * @return 分页对象列表\n     */\n    IPage<{{=beanClass}}> selectByPage(IPage<{{=beanClass}}> page , @Param(Constants.WRAPPER) Wrapper<{{=beanClass}}> wrapper);\n}",
        "Mapper.xml": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    var pkField = \"UNDEFINED_ID\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkField = field.defKey;\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n$blankline\n\n<mapper namespace=\"{{=pkgName}}.mapper.{{=beanClass}}Mapper\">\n     <select id=\"selectByPage\" resultType=\"{{=pkgName}}.entity.{{=beanClass}}\">\n        select * from user ${ew.customSqlSegment}\n    </select>\n</mapper>\n\n",
        "Entity": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.entity;\n$blankline\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport com.baomidou.mybatisplus.annotation.TableName;\nimport com.baomidou.mybatisplus.annotation.TableId;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n\n /**\n * {{=it.entity.defName}};{{=it.entity.comment}}\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@ApiModel(value = \"{{=it.entity.defName}}\",description = \"{{=it.entity.comment}}\")\n@TableName(\"{{=it.entity.defKey}}\")\npublic class {{=beanClass}} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    @ApiModelProperty(name = \"{{=field.defName}}\",notes = \"{{=field.comment}}\")\n    {{? field.primaryKey }}\n    @TableId\n    {{?}}\n    private {{=field.type}} {{=it.func.camel(field.defKey,false)}} ;\n{{~}}\n$blankline\n\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.defKey,true)}}(){\n        return this.{{=it.func.camel(field.defKey,false)}};\n    }\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public void set{{=it.func.camel(field.defKey,true)}}({{=field.type}} {{= it.func.camel(field.defKey,false) }}){\n        this.{{=it.func.camel(field.defKey,false)}}={{=it.func.camel(field.defKey,false)}};\n    }\n{{~}}\n}"
      },
      {
        "applyFor": "29D1CE08-4C35-4D2D-AAA9-23D93305B52E",
        "type": "dbDDL",
        "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    `{{=field.defKey}}` {{?field.autoIncrement}}INT AUTO_INCREMENT{{??}}{{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }}{{?}} COMMENT '{{=it.func.join(field.defName,field.comment,';')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n)  COMMENT = '{{=it.func.join(it.entity.defName,it.entity.comment,';') }}';\n$blankline\n",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
        "deleteTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "deleteIndex": "{{~ it.entity.indexes:index}}\nDROP INDEX IF EXISTS {{=index.defKey}} ;\n{{~}}",
        "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}\n",
        "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('ALTER TABLE '+before.defKey+' RENAME TO '+after.defKey);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            ret.push('ALTER TABLE '+after.defKey+' COMMENT \\''+commentText+'\\'');\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldAdded) { \n            let ddlItem = 'ADD COLUMN `'+field.defKey+'` '+field.dbType;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            if(field.autoIncrement){\n                ddlItem += ' AUTO_INCREMENT';\n            }\n            if(field.defaultValue){\n                ddlItem += (' DEFAULT ' + field.defaultValue);\n            }\n            ddlItem += (' COMMENT \\''+field.defName+';'+field.comment+'\\'');\n            \n            if(field.index>0 && field.afterFieldKey){\n                ddlItem += (' AFTER '+field.afterFieldKey);\n            }\n            ret.push(ddlItem);\n        }\n        return firstDDL+'\\n'+ret.join(',\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldRemoved) { \n            ret.push('DROP '+field.defKey);\n        }\n        return firstDDL+'\\n'+ret.join(',\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey === after.defKey){\n                changeDDL += (' MODIFY COLUMN `'+after.defKey+'`');\n            }else{\n                changeDDL += (' CHANGE COLUMN `'+before.defKey+'` `'+after.defKey+'`');\n            }\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            let defaultValue = '';\n            if(after.defaultValue != null && after.defaultValue.length>0){\n                defaultValue = (after.defaultValue);\n            }else{\n                defaultValue = 'NULL';\n            }\n            if(defaultValue != 'NULL'){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n\n            let comment = after.defName;\n            if(after.comment){\n                comment = comment + ';' + (after.comment||'');\n            }\n            if(comment){\n                changeDDL += (' COMMENT \\''+comment+'\\';');\n            }\n            \n            ret.push(firstDDL+' '+changeDDL);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
      },
      {
        "applyFor": "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542",
        "type": "dbDDL",
        "createTable": "CREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{?field.autoIncrement}}NUMBER(11) generated by default as IDENTITY, {{??}}{{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= field.notNull ? ' NOT NULL' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}{{?}}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
        "deleteTable": "DROP TABLE {{=it.entity.defKey}};",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "deleteIndex": "{{~ it.entity.indexes:index}}\nDROP INDEX {{=index.defKey}} ;\n{{~}}",
        "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* -------------------------------------------------- */\n创建表：\n{{~ createEntities:entity}}\n    {{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* -------------------------------------------------- */\n删除表：\n{{~ dropEntities:entity}}\n    {{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* -------------------------------------------------- */\n修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n    {{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n    {{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n    {{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n    {{?}}{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}\n    {{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('\\n\\t建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('\\n\\t解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}\n{{=indexChanged?'\\n\\t更改了索引':''}}\n{{=changed?'\\n\\t更改了属性':''}}\n{{=relaArray.length>0?relaArray.join(''):''}}\n{{~}}\n{{?}}",
        "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`ALTER TABLE ${before.defKey} RENAME TO ${after.defKey}`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `COMMENT ON TABLE ${after.defKey} IS '${commentText}'`;\n            ret.push(myText);\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD (${field.defKey} ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            ddlItem += ')';\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `COMMENT ON COLUMN ${entity.data.baseInfo.defKey}.${field.defKey} IS '${commentText}'`;\n                 ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN ${field.defKey}`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey !== after.defKey){\n                let renameText = `ALTER TABLE ${entity.data.baseInfo.defKey} RENAME COLUMN ${before.defKey} TO ${after.defKey};`;\n                ret.push(renameText);\n            }\n            /*如果没有变化，则不生成变更语句*/\n            if(before.dbType === after.dbType \n            && before['len'] === after['len'] \n            && before.scale === after.scale\n            && before.primaryKey === after.primaryKey\n            && before.notNull === after.notNull\n            && before.autoIncrement === after.autoIncrement\n            && before.defaultValue === after.defaultValue){\n                continue;\n            }\n            changeDDL += ('MODIFY ('+after.defKey+'');\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            let defaultValue = after.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n            \n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            changeDDL += ')';\n            ret.push(`${firstDDL} ${changeDDL};`);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
      },
      {
        "applyFor": "BFC87171-C74F-494A-B7C2-76B9C55FACC9",
        "type": "dbDDL",
        "createTable": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[{{=it.entity.defKey}}]') AND type in (N'U')) DROP TABLE [dbo].[{{=it.entity.defKey}}];\n\nCREATE TABLE [dbo].[{{=it.entity.defKey}}](\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{?field.autoIncrement}}INT IDENTITY(1,1) {{??}}{{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}{{?}}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}EXEC sp_addextendedproperty 'MS_Description', '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}', 'SCHEMA', dbo, 'table', {{=it.entity.defKey}}, null, null;{{?}}\n{{~it.entity.fields:field:index}}\nEXEC sp_addextendedproperty 'MS_Description', '{{=it.func.join(field.defName,field.comment,';')}}', 'SCHEMA', dbo, 'table', {{=it.entity.defKey}}, 'column', {{=field.defKey}};\n{{~}}\n",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
        "deleteTable": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[{{=it.entity.defKey}}]') AND type in (N'U')) DROP TABLE [dbo].[{{=it.entity.defKey}}];",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "deleteIndex": "",
        "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}",
        "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`EXEC sp_rename '${before.defKey}','${after.defKey}'`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `IF ((SELECT COUNT(*) FROM ::fn_listextendedproperty('MS_Description','SCHEMA', 'dbo','TABLE', '${after.defKey}', NULL, NULL)) > 0)\n            \\n\\tEXEC sp_updateextendedproperty 'MS_Description', '${commentText}','SCHEMA', 'dbo','TABLE', '${after.defKey}'\n            \\nELSE\n            \\n\\tEXEC sp_addextendedproperty 'MS_Description', '${commentText}', 'SCHEMA', 'dbo','TABLE', '${after.defKey}'\n            `;\n            ret.push(myText);\n            /*ret.push('ALTER TABLE '+after.defKey+' COMMENT \\''+commentText+'\\'');*/\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE [dbo].[${entity.data.baseInfo.defKey}]`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD [${field.defKey}] ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `EXEC sp_addextendedproperty 'MS_Description', N'${commentText}','SCHEMA', N'dbo','TABLE', N'${entity.data.baseInfo.defKey}','COLUMN', N'${field.defKey}'`;\n                ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE [dbo].[${entity.data.baseInfo.defKey}]`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN [${field.defKey}]`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE [dbo].[${entity.data.baseInfo.defKey}]`;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey === after.defKey){\n                changeDDL += (' ALTER COLUMN ['+after.defKey+']');\n            }else{\n                let renameText = `EXEC sp_rename '[dbo].[${entity.data.baseInfo.defKey}].[${before.defKey}]','${after.defKey}','COLUMN';`;\n                ret.push(renameText);\n                continue;\n            }\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            let defaultValue = after.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n            \n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            ret.push(`${firstDDL} ${changeDDL};`);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
      },
      {
        "applyFor": "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022",
        "type": "dbDDL",
        "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{? field.autoIncrement}}SERIAL{{??}}{{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
        "deleteTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "deleteIndex": "{{~ it.entity.indexes:index}}\nDROP INDEX {{=index.defKey}} ;\n{{~}}",
        "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}",
        "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`ALTER TABLE ${before.defKey} RENAME TO ${after.defKey}`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `COMMENT ON TABLE ${after.defKey} IS '${commentText}'`;\n            ret.push(myText);\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD COLUMN ${field.defKey} ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }            \n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `COMMENT ON COLUMN ${entity.data.baseInfo.defKey}.${field.defKey} IS '${commentText}'`;\n                 ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN ${field.defKey}`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldModified) { \n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey !== after.defKey){\n                let renameText = `ALTER TABLE ${entity.data.baseInfo.defKey} RENAME COLUMN ${before.defKey} TO ${after.defKey};`;\n                ret.push(renameText);\n            }\n            /*如果没有变化，则不生成变更语句*/\n            if(before.dbType === after.dbType \n            && before['len'] === after['len'] \n            && before.scale === after.scale\n            && before.primaryKey === after.primaryKey\n            && before.notNull === after.notNull\n            && before.autoIncrement === after.autoIncrement\n            && before.defaultValue === after.defaultValue){\n                continue;\n            }\n            if(before.dbType !== after.dbType || before.len !== after.len || before.scale !== after.scale){\n                let dbTypeDDL = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${after.defKey} TYPE ${before.dbType}`;\n                if(after.len>0){\n                    dbTypeDDL += ('('+after.len);\n                    if(parseInt(after.scale)>0){\n                        dbTypeDDL += (','+after.scale);\n                    }\n                    dbTypeDDL += ')';\n                }\n                ret.push(dbTypeDDL+';');\n            }\n            \n            if(before.defaultValue !== after.defaultValue){\n                let defaultDDL = '';\n                let defaultValue = after.defaultValue;\n                defaultValue = (defaultValue==null)?\"NULL\":(\"\"+defaultValue);\n                if(defaultValue.length>0){\n                    defaultDDL += ('SET DEFAULT ' + defaultValue);\n                }\n                let defaultTpl = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${defaultDDL};`;\n                ret.push(defaultTpl);\n            }\n            \n            if(before.notNull !== after.notNull){\n                let notNullDDL= 'SET NULL';\n                if(after.notNull){\n                    let notNullDDL= 'SET NOT NULL';\n                }\n                let notNullTpl = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${notNullDDL};`;\n                ret.push(notNullTpl);\n            }\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n-- 索引重建\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
      },
      {
        "type": "dbDDL",
        "applyFor": "89504F5D-94BF-4C9E-8B2E-44F37305FED5",
        "createTable": "CREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{?field.autoIncrement}}DECIMAL(17) GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),{{??}}{{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}{{?}}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
      },
      {
        "applyFor": "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307",
        "type": "dbDDL",
        "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{?field.autoIncrement}}INT IDENTITY(1,1) {{??}}{{=field.dbType}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{?}}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
        "deleteTable": "",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "deleteIndex": "",
        "message": "",
        "update": ""
      },
      {
        "type": "dbDDL",
        "applyFor": "592C7013-143D-4E7B-AF64-0D7BF1E28230",
        "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? ' AUTO_INCREMENT' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
      },
      {
        "type": "dbDDL",
        "applyFor": "77BD85E5-9D0D-4096-8427-CBA306FC9C6A",
        "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
      },
      {
        "applyFor": "11D1FB71-A587-4217-89BA-611B8A1F83E0",
        "type": "dbDDL",
        "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'AUTO_INCREMENT' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }} COMMENT '{{=it.func.join(field.defName,field.comment,';')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n)  COMMENT '{{=it.func.join(it.entity.defName,it.entity.comment,';') }}';\n$blankline\n",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
        "deleteTable": "",
        "createIndex": "",
        "deleteIndex": "",
        "message": "",
        "update": ""
      },
      {
        "applyFor": "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1",
        "type": "dbDDL",
        "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'AUTOINCREMENT' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }} --{{=it.func.join(field.defName,field.comment,';')}}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n)  ; --{{=it.func.join(it.entity.defName,it.entity.comment,';') }}\n$blankline\n",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
      },
      {
        "type": "dbDDL",
        "applyFor": "dictSQLTemplate",
        "content": "/* 插入字典总表[{{=it.dict.defKey}}-{{=it.dict.defName}}] */\nINSERT INTO SYS_DICT(KEY_,LABEL,INTRO,REVISION) VALUES('{{=it.dict.defKey}}','{{=it.dict.defName}}','{{=it.dict.intro}}',1);\n/* 插入字典明细表 */\n{{~it.dict.items:item:index}}\nINSERT INTO SYS_DICT_ITEM(DICT_KEY,KEY_,LABEL,SORT_,INTRO,REVISION) VALUES('{{=it.dict.defKey}}','{{=item.defKey}}','{{=item.defName}}','{{=item.sort}}','{{=item.intro}}',1);\n{{~}}"
      },
      {
        "applyFor": "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2",
        "type": "dbDDL",
        "createTable": "/**字段名,关键字等全部用的小写*/\ndrop table if exists {{=it.entity.defKey}};\n/**补充上库名,external关键字根据建表规范看是否添加*/\ncreate [external] table if not exists {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n/**这里把varchar,char,text,date,datetime字段全部映射为string类型.tinyint unsigned,bit,Integer,tinyint,smallint,mediumint映射为int类型,int unsigned映射为bigint.其它自定义映射规则根据自己情况修改*/\n/**当长度>0只有为decimal类型或double类型时才保留长度和小数的位数*/\n{{~it.entity.fields:field:index}}\n    {{=it.func.lowerCase(field.defKey)}} {{=it.func.lowerCase(field.type)=='varchar'||it.func.lowerCase(field.type)=='char'||it.func.lowerCase(field.type)=='text'||it.func.lowerCase(field.type)=='date'||it.func.lowerCase(field.type)=='datetime' ? 'string':it.func.lowerCase(field.type)=='tinyint unsigned'||it.func.lowerCase(field.type)=='bit'||it.func.lowerCase(field.type)=='integer'||it.func.lowerCase(field.type)=='tinyint'||it.func.lowerCase(field.type)=='smallint'||it.func.lowerCase(field.type)=='mediumint' ? 'int':it.func.lowerCase(field.type)=='int unsigned' ? 'bigint':it.func.lowerCase(field.type)}}{{?field.len>0&&(it.func.lowerCase(field.type)=='decimal'||it.func.lowerCase(field.type)=='double')}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{=')'}}{{?}}{{?}} comment '{{=it.func.join(field.defName,field.comment,'')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n{{?}}\n)\n{{\n    let partitionedBy = it.entity.properties['partitioned by'];\n    partitionedBy = partitionedBy?partitionedBy:'请在扩展属性中配置[partitioned by]属性';\n}}\ncomment '{{=it.func.join(it.entity.defName,';') }}'\n/**是否分区表,分区字段名和字段注释自定义*/\n[partitioned by {{=partitionedBy}}]\n/**文件存储格式自定义*/\n[stored as orc]\n/**hdfs上的地址自定义*/\n[location xxx]\n;",
        "createView": "",
        "deleteTable": "",
        "createIndex": "",
        "deleteIndex": "",
        "message": "",
        "update": ""
      },
      {
        "applyFor": "B91D99E0-9B7C-416C-8737-B760957DAF09",
        "type": "appCode",
        "content": "{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1<10?\"0\"+today.getMonth():today.getMonth();\n    var days=today.getDate()<10?\"0\"+today.getDate():today.getDate();\n    var hours = today.getHours()<10?\"0\"+today.getHours():today.getHours();         \n\tvar minutes = today.getMinutes()<10?\"0\"+today.getMinutes():today.getMinutes();      \n\tvar seconds = today.getSeconds()<10?\"0\"+today.getSeconds():today.getSeconds();    \n}}\n// Package models  {{=it.func.join(it.entity.defName,it.entity.comment,'，')}}\n// author : http://www.liyang.love\n// date : {{=fullYear}}-{{=month}}-{{=days}} {{=hours}}:{{=minutes}}\n// desc : {{=it.func.join(it.entity.defName,it.entity.comment,'，')}}\npackage models\n\n$blankline\n\n// {{=it.func.camel(it.entity.defKey,true) }}  {{=it.func.join(it.entity.defName,it.entity.comment,'，')}}。\n// 说明:{{=it.entity.comment}}\n// 表名:{{=it.entity.defKey}}\n// group: {{=it.func.camel(it.entity.defKey,true) }}\n// obsolete:\n// appliesto:go 1.8+;\n// namespace:hongmouer.his.models.{{=it.func.camel(it.entity.defKey,true) }}\n// assembly: hongmouer.his.models.go\n// class:HongMouer.HIS.Models.{{=it.func.camel(it.entity.defKey,true) }}\n// version:{{=fullYear}}-{{=month}}-{{=days}} {{=hours}}:{{=minutes}}\ntype {{=it.func.camel(it.entity.defKey,true) }} struct {\n    {{~it.entity.fields:field:index}}\n    {{=formatGoLang(it.func.camel(field.defKey,true),null,field,it.entity.fields,null,1)}} {{=formatGoLang(field.type,\"type\",field,it.entity.fields,10,3)}}  `gorm:\"column:{{=field.primaryKey?\"primaryKey;\":\"\"}}{{=field.defKey}}\" json:\"{{=it.func.camel(field.defKey,true)}}\"` {{=formatGoLang(\"gorm:column:\"+field.defKey+\" json:\"+it.func.camel(field.defKey,true),null,field,it.entity.fields,null,2)}}  //type:{{=formatGoLang(field.type,\"type\",field,it.entity.fields,null,3)}}  comment:{{=formatGoLang(it.func.join(field.defName,field.comment,';'),\"defName\",field,it.entity.fields,null,4)}}  version:{{=fullYear}}-{{=month}}-{{=days}} {{=hours}}:{{=minutes}}\n    {{~}}\n}\n\n\n$blankline\n// TableName 表名:{{=it.entity.defKey}}，{{=it.entity.defName}}。\n// 说明:{{=it.entity.comment}}\nfunc (ZentaoUserInfo) TableName() string {\n\treturn \"{{=it.entity.defKey}}\"\n}\n\n{{\n\nfunction formatGoLang(str, fieldName, field, fileds, emptLength, isFiled) {\n    var maxLength = 0;\n\n    if (isFiled == 1) {\n        for (var i = 0; i < fileds.length; i++) {\n            if (getBlength(it.func.camel(fileds[i].defKey, true)) > maxLength) {\n                maxLength = getBlength(it.func.camel(fileds[i].defKey, true)) + 2;\n            }\n        }\n    } else if (isFiled == 2) {\n        for (var i = 0; i < fileds.length; i++) {\n            var newStr = \"gorm:column:\" + fileds[i].defKey + \" json:\" + it.func.camel(fileds[i].defKey, true);\n            if (getBlength(newStr) > maxLength) {\n                maxLength = getBlength(newStr) + 2;\n            }\n        }\n        var empt = \"\";\n        var strLength = getBlength(str);\n        if (field.primaryKey) {\n            strLength += getBlength(\"primaryKey;\");\n        }\n        for (var j = 0; j < maxLength - strLength; j++) {\n            empt += ' ';\n        }\n        return empt;\n    } else if (isFiled == 3) {\n        /*获取某个字段的最大长度*/\n        for (var i = 0; i < fileds.length; i++) {\n            var newStr = eval(\"fileds[\" + i + \"].\" + fieldName);\n            if (getBlength(newStr) > maxLength) {\n                maxLength = getBlength(newStr) + 1;\n            }\n        }\n    } else if (isFiled == 4) {\n        /*获取某个字段的最大长度*/\n        for (var i = 0; i < fileds.length; i++) {\n            var newStr = fileds[i].comment + \";\" + fileds[i].defName;\n            if (getBlength(newStr) > maxLength) {\n                maxLength = getBlength(newStr) + 1;\n            }\n        }\n    }\n    else {\n        maxLength = emptLength;\n    }\n\n    var strLength = getBlength(str);\n    for (var j = 0; j < maxLength - strLength; j++) {\n        str += ' ';\n    }\n    return str;\n}\n\nfunction getBlength(str) {\n    var n = 0;\n    for (var i = str.length; i--;) {\n        n += str.charCodeAt(i) > 255 ? 2 : 1;\n    }\n    return n;\n} \n\n}}"
      },
      {
        "applyFor": "BDF457FD-9F98-4AC3-A705-7587B00A3BAB",
        "type": "appCode",
        "struct": "use chrono::{DateTime, Local};\nuse serde::{Deserialize, Serialize};\n$blankline\n/// {{=it.entity.defName}}\n#[derive(Serialize, Deserialize, Debug, Clone)]\n{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    \n}}\npub struct {{=beanClass}} {\n    {{~it.entity.fields:field:index}}\n    {{\n        let fieldDateType = field.type;\n        if(!field.notNull){\n            fieldDateType = 'Option<'+fieldDateType+'>';\n        }\n    }}/// {{=field.defName}}\n    pub {{=it.func.camel(field.defKey,false)}}: {{=fieldDateType}},\n    {{~}}\n}\n"
      },
      {
        "applyFor": "56F4B55B-F0B8-4049-9E6B-50B95C1D793A",
        "type": "dbDDL",
        "createTable": "CREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? '' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline",
        "deleteTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "deleteIndex": "{{~ it.entity.indexes:index}}\nDROP INDEX {{=index.defKey}} ;\n{{~}}",
        "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* -------------------------------------------------- */\n创建表：\n{{~ createEntities:entity}}\n    {{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* -------------------------------------------------- */\n删除表：\n{{~ dropEntities:entity}}\n    {{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* -------------------------------------------------- */\n修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n    {{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n    {{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n    {{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n    {{?}}{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}\n    {{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('\\n\\t建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('\\n\\t解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}\n{{=indexChanged?'\\n\\t更改了索引':''}}\n{{=changed?'\\n\\t更改了属性':''}}\n{{=relaArray.length>0?relaArray.join(''):''}}\n{{~}}\n{{?}}",
        "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`ALTER TABLE ${before.defKey} RENAME TO ${after.defKey}`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `COMMENT ON TABLE ${after.defKey} IS '${commentText}'`;\n            ret.push(myText);\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD (${field.defKey} ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            ddlItem += ')';\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `COMMENT ON COLUMN ${entity.data.baseInfo.defKey}.${field.defKey} IS '${commentText}'`;\n                 ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN ${field.defKey}`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey !== after.defKey){\n                let renameText = `ALTER TABLE ${entity.data.baseInfo.defKey} RENAME COLUMN ${before.defKey} TO ${after.defKey};`;\n                ret.push(renameText);\n            }\n            /*如果没有变化，则不生成变更语句*/\n            if(before.dbType === after.dbType \n            && before['len'] === after['len'] \n            && before.scale === after.scale\n            && before.primaryKey === after.primaryKey\n            && before.notNull === after.notNull\n            && before.autoIncrement === after.autoIncrement\n            && before.defaultValue === after.defaultValue){\n                continue;\n            }\n            changeDDL += ('MODIFY ('+after.defKey+'');\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            let defaultValue = after.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n            \n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            changeDDL += ')';\n            ret.push(`${firstDDL} ${changeDDL};`);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
      },
      {
        "applyFor": "483F9346-C99E-4014-A1D2-A554606BD8A3",
        "type": "dbDDL",
        "createTable": "{{let dorisDistributedBy = it.entity.properties['dorisDistributedBy'];\n    dorisDistributedBy = dorisDistributedBy?dorisDistributedBy:'请在表的扩展属性中配置[dorisDistributedBy]属性';\n}}CREATE TABLE IF NOT EXISTS  {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    `{{=field.defKey}}` {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}} {{= field.notNull ? 'NOT NULL' : '' }} COMMENT '{{=it.func.join(field.defName,field.comment,';')}}' {{= index < it.entity.fields.length-1 ? ',' : '' }}\n{{~}}\n)  COMMENT '{{=it.func.join(it.entity.defName,it.entity.comment,';') }}'\n{{=dorisDistributedBy}} ;\n$blankline\n",
        "createView": "",
        "deleteTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};",
        "createIndex": "",
        "deleteIndex": "",
        "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}\n",
        "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('ALTER TABLE '+before.defKey+' RENAME TO '+after.defKey);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            ret.push('ALTER TABLE '+after.defKey+' COMMENT \\''+commentText+'\\'');\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldAdded) { \n            let ddlItem = 'ADD COLUMN `'+field.defKey+'` '+field.dbType;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            if(field.autoIncrement){\n                ddlItem += ' AUTO_INCREMENT';\n            }\n            if(field.defaultValue){\n                ddlItem += (' DEFAULT ' + field.defaultValue);\n            }\n            ddlItem += (' COMMENT \\''+field.defName+';'+field.comment+'\\'');\n            \n            if(field.index>0 && field.afterFieldKey){\n                ddlItem += (' AFTER '+field.afterFieldKey);\n            }\n            ret.push(ddlItem);\n        }\n        return firstDDL+'\\n'+ret.join(',\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldRemoved) { \n            ret.push('DROP '+field.defKey);\n        }\n        return firstDDL+'\\n'+ret.join(',\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey === after.defKey){\n                changeDDL += (' MODIFY COLUMN `'+after.defKey+'`');\n            }else{\n                changeDDL += (' CHANGE COLUMN `'+before.defKey+'` `'+after.defKey+'`');\n            }\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            let defaultValue = '';\n            if(after.defaultValue != null && after.defaultValue.length>0){\n                defaultValue = (after.defaultValue);\n            }else{\n                defaultValue = 'NULL';\n            }\n            if(defaultValue != 'NULL'){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n\n            let comment = after.defName;\n            if(after.comment){\n                comment = comment + ';' + (after.comment||'');\n            }\n            if(comment){\n                changeDDL += (' COMMENT \\''+comment+'\\';');\n            }\n            \n            ret.push(firstDDL+' '+changeDDL);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
      },
      {
        "applyFor": "ABF5836C-0B7C-4007-A41C-F869325E5842",
        "type": "dbDDL",
        "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{? field.autoIncrement}}SERIAL{{??}}{{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
        "createView": "",
        "deleteTable": "",
        "createIndex": "",
        "deleteIndex": "",
        "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}",
        "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`ALTER TABLE ${before.defKey} RENAME TO ${after.defKey}`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `COMMENT ON TABLE ${after.defKey} IS '${commentText}'`;\n            ret.push(myText);\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD COLUMN ${field.defKey} ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }            \n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `COMMENT ON COLUMN ${entity.data.baseInfo.defKey}.${field.defKey} IS '${commentText}'`;\n                 ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN ${field.defKey}`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldModified) { \n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey !== after.defKey){\n                let renameText = `ALTER TABLE ${entity.data.baseInfo.defKey} RENAME COLUMN ${before.defKey} TO ${after.defKey};`;\n                ret.push(renameText);\n            }\n            /*如果没有变化，则不生成变更语句*/\n            if(before.dbType === after.dbType \n            && before['len'] === after['len'] \n            && before.scale === after.scale\n            && before.primaryKey === after.primaryKey\n            && before.notNull === after.notNull\n            && before.autoIncrement === after.autoIncrement\n            && before.defaultValue === after.defaultValue){\n                continue;\n            }\n            if(before.dbType !== after.dbType || before.len !== after.len || before.scale !== after.scale){\n                let dbTypeDDL = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${after.defKey} TYPE ${before.dbType}`;\n                if(after.len>0){\n                    dbTypeDDL += ('('+after.len);\n                    if(parseInt(after.scale)>0){\n                        dbTypeDDL += (','+after.scale);\n                    }\n                    dbTypeDDL += ')';\n                }\n                ret.push(dbTypeDDL+';');\n            }\n            \n            if(before.defaultValue !== after.defaultValue){\n                let defaultDDL = '';\n                let defaultValue = after.defaultValue;\n                defaultValue = (defaultValue==null)?\"NULL\":(\"\"+defaultValue);\n                if(defaultValue.length>0){\n                    defaultDDL += ('SET DEFAULT ' + defaultValue);\n                }\n                let defaultTpl = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${defaultDDL};`;\n                ret.push(defaultTpl);\n            }\n            \n            if(before.notNull !== after.notNull){\n                let notNullDDL= 'SET NULL';\n                if(after.notNull){\n                    let notNullDDL= 'SET NOT NULL';\n                }\n                let notNullTpl = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${notNullDDL};`;\n                ret.push(notNullTpl);\n            }\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n-- 索引重建\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
      }
    ],
    "generatorDoc": {
      "docTemplate": ""
    },
    "relationFieldSize": "15",
    "uiHint": [
      {
        "defKey": "Input",
        "defName": "普通输入框",
        "id": "642D2E0A-8846-4549-BE56-8C0473F26EDE"
      },
      {
        "defKey": "Select",
        "defName": "下拉输入框",
        "id": "FB111359-2B73-4443-926C-08A98E446448"
      },
      {
        "defKey": "CheckBox",
        "defName": "复选框",
        "id": "0CB8A6C9-1115-4FC0-B51E-5C028065082F"
      },
      {
        "defKey": "RadioBox",
        "defName": "单选框",
        "id": "5C04987A-260F-4B7C-A5D5-22A181AAE9CA"
      },
      {
        "defKey": "Double",
        "defName": "小数输入",
        "id": "8D5BAFE4-E15C-4707-A047-8EE59C58E70F"
      },
      {
        "defKey": "Integer",
        "defName": "整数输入",
        "id": "9999AF2A-A44E-415C-A2DC-D7C613BD0073"
      },
      {
        "defKey": "Money",
        "defName": "金额输入",
        "id": "2B0C3D0C-7BAF-4B36-81AD-9362B5E5DC2E"
      },
      {
        "defKey": "Date",
        "defName": "日期输入",
        "id": "E4D94E14-F695-487F-AFC2-4D888009B7DA"
      },
      {
        "defKey": "DataYearMonth",
        "defName": "年月输入",
        "id": "936927E3-DD2D-4096-87FD-074CDE278D59"
      },
      {
        "defKey": "Text",
        "defName": "长文本输入",
        "id": "D89DD4F1-ADAC-4469-BF8D-B3FF41AE7963"
      },
      {
        "defKey": "RichText",
        "defName": "富文本输入",
        "id": "C134EB1F-4CFF-49E0-882F-2C6FB275CB20"
      }
    ],
    "headers": [
      {
        "refKey": "defKey",
        "hideInGraph": false,
        "value": "字段代码",
        "freeze": false
      },
      {
        "refKey": "defName",
        "hideInGraph": false,
        "value": "显示名称",
        "freeze": false
      },
      {
        "refKey": "primaryKey",
        "hideInGraph": false,
        "value": "主键",
        "freeze": false
      },
      {
        "refKey": "notNull",
        "hideInGraph": true,
        "value": "不为空",
        "freeze": false
      },
      {
        "refKey": "autoIncrement",
        "hideInGraph": true,
        "value": "自增",
        "freeze": false
      },
      {
        "refKey": "domain",
        "hideInGraph": true,
        "value": "数据域",
        "freeze": false
      },
      {
        "refKey": "type",
        "hideInGraph": false,
        "value": "数据类型",
        "freeze": false
      },
      {
        "refKey": "len",
        "hideInGraph": false,
        "value": "长度",
        "freeze": false
      },
      {
        "refKey": "scale",
        "hideInGraph": false,
        "value": "小数位数",
        "freeze": false
      },
      {
        "refKey": "comment",
        "hideInGraph": true,
        "value": "说明",
        "freeze": false
      },
      {
        "refKey": "refDict",
        "hideInGraph": true,
        "value": "数据字典",
        "freeze": false
      },
      {
        "refKey": "defaultValue",
        "hideInGraph": true,
        "value": "默认值",
        "freeze": false
      },
      {
        "refKey": "isStandard",
        "hideInGraph": false,
        "value": "标准字段",
        "enable": false,
        "freeze": false
      },
      {
        "refKey": "uiHint",
        "hideInGraph": true,
        "value": "UI建议",
        "enable": true,
        "freeze": false
      },
      {
        "refKey": "extProps",
        "hideInGraph": true,
        "value": "拓展属性",
        "enable": true,
        "freeze": false
      },
      {
        "refKey": "attr1",
        "value": "属性1",
        "hideInGraph": true,
        "enable": true,
        "freeze": false
      },
      {
        "refKey": "attr2",
        "value": "属性2",
        "hideInGraph": true,
        "enable": false,
        "freeze": false
      },
      {
        "refKey": "attr3",
        "value": "属性3",
        "hideInGraph": true,
        "enable": false,
        "freeze": false
      },
      {
        "refKey": "attr4",
        "value": "属性4",
        "hideInGraph": true,
        "enable": false,
        "freeze": false
      },
      {
        "refKey": "attr5",
        "value": "属性5",
        "hideInGraph": true,
        "enable": false,
        "freeze": false
      },
      {
        "refKey": "attr6",
        "value": "属性6",
        "hideInGraph": true,
        "enable": false,
        "freeze": false
      },
      {
        "refKey": "attr7",
        "value": "属性7",
        "hideInGraph": true,
        "enable": false,
        "freeze": false
      },
      {
        "refKey": "attr8",
        "value": "属性8",
        "hideInGraph": true,
        "enable": false,
        "freeze": false
      },
      {
        "refKey": "attr9",
        "value": "属性9",
        "hideInGraph": true,
        "enable": false,
        "freeze": false
      }
    ],
    "modelType": "modalAll",
    "recentColors": [
      "#d148d1",
      "#ce4bce",
      "#831b83",
      "#dd31dd",
      "#da2fda",
      "#e988e9",
      "#000000",
      "#DDE5FF"
    ],
    "DDLToggleCase": "L",
    "themeMode": "themeDay"
  },
  "entities": [
    {
      "id": "5E696AF7-9066-4D97-9791-1AD44288EBCC",
      "env": {
        "base": {
          "nameSpace": "",
          "codeRoot": ""
        }
      },
      "defKey": "bank",
      "defName": "银行",
      "comment": "",
      "properties": {
        "partitioned by": "(date string)",
        "row format delimited": "",
        "fields terminated by ','": "",
        "collection items terminated by '-'": "",
        "map keys terminated by ':'": "",
        "store as textfile;": ""
      },
      "sysProps": {
        "nameTemplate": "{defKey}[{defName}]"
      },
      "notes": {},
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "refKey": "defKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "defName",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "primaryKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "notNull",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "autoIncrement",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "domain",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "type",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "len",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "scale",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "comment",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "refDict",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "defaultValue",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "isStandard",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "uiHint",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr1",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr2",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr3",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr4",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr5",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr6",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr7",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr8",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr9",
          "freeze": false,
          "hideInGraph": true
        }
      ],
      "fields": [
        {
          "defKey": "b_name",
          "defName": "银行名称",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "id": "19367CFC-2B51-4FD5-88EF-34D57524C0A1",
          "uiHint": "642D2E0A-8846-4549-BE56-8C0473F26EDE"
        },
        {
          "defKey": "b_addr",
          "defName": "银行地址",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "8F1B9940-A088-4A46-BF05-550D429124B7",
          "id": "3BA9B1CA-CC02-4A41-931F-47BB0CF406F8",
          "uiHint": "642D2E0A-8846-4549-BE56-8C0473F26EDE"
        },
        {
          "defKey": "b_phone",
          "defName": "银行电话",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "39E39939-2DEB-42E3-A74E-56D4962E6CC3",
          "id": "14E52115-011A-4E9B-9A4E-6BD258CA32BD"
        }
      ],
      "correlations": [
        {
          "myField": "19367CFC-2B51-4FD5-88EF-34D57524C0A1",
          "refEntity": "879C90B9-5995-4402-8B05-813D6DC4B965",
          "refField": "A60083AE-1C10-4650-A618-6F30B51577EE",
          "myRows": "triangle-fill",
          "refRows": "none",
          "innerType": ""
        }
      ],
      "indexes": [],
      "type": "P"
    },
    {
      "id": "4414C49A-AADA-484B-BBEE-4F63A9BAE800",
      "env": {
        "base": {
          "nameSpace": "",
          "codeRoot": ""
        }
      },
      "defKey": "department",
      "defName": "部门",
      "comment": "",
      "properties": {
        "partitioned by": "(date string)",
        "row format delimited": "",
        "fields terminated by ','": "",
        "collection items terminated by '-'": "",
        "map keys terminated by ':'": "",
        "store as textfile;": ""
      },
      "sysProps": {
        "nameTemplate": "{defKey}[{defName}]"
      },
      "notes": {},
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "refKey": "defKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "defName",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "primaryKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "notNull",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "autoIncrement",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "domain",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "type",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "len",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "scale",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "comment",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "refDict",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "defaultValue",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "isStandard",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "uiHint",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr1",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr2",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr3",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr4",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr5",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr6",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr7",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr8",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr9",
          "freeze": false,
          "hideInGraph": true
        }
      ],
      "fields": [
        {
          "defKey": "b_name",
          "defName": "银行名称",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "id": "4696F292-6863-4579-87EA-883B9CE3260C",
          "uiHint": "642D2E0A-8846-4549-BE56-8C0473F26EDE"
        },
        {
          "defKey": "d_no",
          "defName": "部门号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "82FFF4CF-6A87-475D-8D48-B3FFB0A1EB9F",
          "id": "6871419F-DC37-4BD9-842C-2C09DA0F958D",
          "uiHint": "642D2E0A-8846-4549-BE56-8C0473F26EDE"
        },
        {
          "defKey": "d_name",
          "defName": "部门名称",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "id": "C06D18E1-8870-4E57-A5A9-F4D17E1A8E78",
          "uiHint": "642D2E0A-8846-4549-BE56-8C0473F26EDE"
        },
        {
          "defKey": "d_phone",
          "defName": "部门电话",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "39E39939-2DEB-42E3-A74E-56D4962E6CC3",
          "id": "8BA084EF-C2C0-42EE-A110-879979B4E1ED",
          "uiHint": "642D2E0A-8846-4549-BE56-8C0473F26EDE"
        },
        {
          "defKey": "d_manager_no",
          "defName": "部门经理号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "4E0B83F6-B24C-4E67-A32A-F59434AAF079",
          "id": "BC0FCA39-EF20-4DA8-AD69-19866DC34EE3"
        }
      ],
      "correlations": [
        {
          "myField": "4696F292-6863-4579-87EA-883B9CE3260C",
          "refEntity": "DCE42BA8-6E5B-4399-9254-1C1227931192",
          "refField": "9F39C1D4-68BC-442A-9C83-D7ACFD0703E7",
          "myRows": "triangle-fill",
          "refRows": "none",
          "innerType": ""
        },
        {
          "myField": "6871419F-DC37-4BD9-842C-2C09DA0F958D",
          "refEntity": "DCE42BA8-6E5B-4399-9254-1C1227931192",
          "refField": "562425C6-ED0F-4EED-8FCA-BD83A9D17357",
          "myRows": "triangle-fill",
          "refRows": "none",
          "innerType": ""
        },
        {
          "myField": "6871419F-DC37-4BD9-842C-2C09DA0F958D",
          "refEntity": "879C90B9-5995-4402-8B05-813D6DC4B965",
          "refField": "EEBDE30D-3417-408D-8A59-BE95831A6650",
          "myRows": "triangle-fill",
          "refRows": "none",
          "innerType": ""
        }
      ],
      "indexes": [],
      "type": "P"
    },
    {
      "id": "DCE42BA8-6E5B-4399-9254-1C1227931192",
      "env": {
        "base": {
          "nameSpace": "",
          "codeRoot": ""
        }
      },
      "defKey": "department_manager",
      "defName": "部门经理表",
      "comment": "",
      "properties": {
        "partitioned by": "(date string)",
        "row format delimited": "",
        "fields terminated by ','": "",
        "collection items terminated by '-'": "",
        "map keys terminated by ':'": "",
        "store as textfile;": ""
      },
      "sysProps": {
        "nameTemplate": "{defKey}[{defName}]"
      },
      "notes": {},
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "refKey": "defKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "defName",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "primaryKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "notNull",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "autoIncrement",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "domain",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "type",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "len",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "scale",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "comment",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "refDict",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "defaultValue",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "isStandard",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "uiHint",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr1",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr2",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr3",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr4",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr5",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr6",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr7",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr8",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr9",
          "freeze": false,
          "hideInGraph": true
        }
      ],
      "fields": [
        {
          "defKey": "b_name",
          "defName": "银行名称",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "8346BD3A-7BD4-4AFC-9DD1-B82D82D67F8A",
          "id": "9F39C1D4-68BC-442A-9C83-D7ACFD0703E7"
        },
        {
          "defKey": "d_no",
          "defName": "部门号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "82FFF4CF-6A87-475D-8D48-B3FFB0A1EB9F",
          "id": "562425C6-ED0F-4EED-8FCA-BD83A9D17357"
        },
        {
          "defKey": "e_no",
          "defName": "经理自己的员工号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "4E0B83F6-B24C-4E67-A32A-F59434AAF079",
          "id": "F05B1097-8C36-495C-BE2B-6D2ABFBC5575"
        }
      ],
      "correlations": [],
      "indexes": [],
      "type": "P"
    },
    {
      "id": "3E80404A-CACA-4DA5-BAE0-A25E6FDBAAA7",
      "env": {
        "base": {
          "nameSpace": "",
          "codeRoot": ""
        }
      },
      "defKey": "manager",
      "defName": "经理",
      "comment": "",
      "properties": {
        "partitioned by": "(date string)",
        "row format delimited": "",
        "fields terminated by ','": "",
        "collection items terminated by '-'": "",
        "map keys terminated by ':'": "",
        "store as textfile;": ""
      },
      "sysProps": {
        "nameTemplate": "{defKey}[{defName}]"
      },
      "notes": {},
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "refKey": "defKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "defName",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "primaryKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "notNull",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "autoIncrement",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "domain",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "type",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "len",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "scale",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "comment",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "refDict",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "defaultValue",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "isStandard",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "uiHint",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr1",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr2",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr3",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr4",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr5",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr6",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr7",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr8",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr9",
          "freeze": false,
          "hideInGraph": true
        }
      ],
      "fields": [
        {
          "defKey": "b_name",
          "defName": "银行名称",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "id": "3FB1CF3D-BBD0-4033-9C5F-011541BC9AF7",
          "uiHint": "642D2E0A-8846-4549-BE56-8C0473F26EDE"
        },
        {
          "defKey": "e_no",
          "defName": "员工号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "4E0B83F6-B24C-4E67-A32A-F59434AAF079",
          "id": "6887E0EB-B0B9-4AC9-A6BE-7085B892745B"
        }
      ],
      "correlations": [
        {
          "myField": "3FB1CF3D-BBD0-4033-9C5F-011541BC9AF7",
          "refEntity": "5E696AF7-9066-4D97-9791-1AD44288EBCC",
          "refField": "19367CFC-2B51-4FD5-88EF-34D57524C0A1",
          "myRows": "none",
          "refRows": "triangle-fill",
          "innerType": ""
        },
        {
          "myField": "6887E0EB-B0B9-4AC9-A6BE-7085B892745B",
          "refEntity": "DCE42BA8-6E5B-4399-9254-1C1227931192",
          "refField": "F05B1097-8C36-495C-BE2B-6D2ABFBC5575",
          "myRows": "triangle-fill",
          "refRows": "none",
          "innerType": ""
        }
      ],
      "indexes": [],
      "type": "P"
    },
    {
      "id": "879C90B9-5995-4402-8B05-813D6DC4B965",
      "env": {
        "base": {
          "nameSpace": "",
          "codeRoot": ""
        }
      },
      "defKey": "employee",
      "defName": "员工",
      "comment": "",
      "properties": {
        "partitioned by": "(date string)",
        "row format delimited": "",
        "fields terminated by ','": "",
        "collection items terminated by '-'": "",
        "map keys terminated by ':'": "",
        "store as textfile;": ""
      },
      "sysProps": {
        "nameTemplate": "{defKey}[{defName}]"
      },
      "notes": {},
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "refKey": "defKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "defName",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "primaryKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "notNull",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "autoIncrement",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "domain",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "type",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "len",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "scale",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "comment",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "refDict",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "defaultValue",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "isStandard",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "uiHint",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr1",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr2",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr3",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr4",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr5",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr6",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr7",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr8",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr9",
          "freeze": false,
          "hideInGraph": true
        }
      ],
      "fields": [
        {
          "defKey": "b_name",
          "defName": "银行名称",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "id": "A60083AE-1C10-4650-A618-6F30B51577EE",
          "uiHint": "642D2E0A-8846-4549-BE56-8C0473F26EDE"
        },
        {
          "defKey": "e_no",
          "defName": "员工号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "4E0B83F6-B24C-4E67-A32A-F59434AAF079",
          "id": "A0569407-F110-4741-BAB9-8D0E8BEB2670"
        },
        {
          "defKey": "e_id",
          "defName": "员工身份证号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "1BFCE1A2-A525-43BE-9B08-7DB1B7B94BC3",
          "id": "28442CFA-E51C-4D59-9415-7637ECCC65D2"
        },
        {
          "defKey": "e_name",
          "defName": "员工姓名",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "8D3D0CC8-866A-4285-B8AD-AF5EAE0A12E2",
          "id": "9A38AA8E-4B88-46D4-8488-1A245E6D2863"
        },
        {
          "defKey": "e_age",
          "defName": "员工年龄",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "1D764C4A-6F9F-421E-B11A-6F3E23B51811",
          "extProps": {},
          "domain": "F7E02E94-7538-4598-8FDF-9716AE794B50",
          "id": "C06297D7-9581-403E-A5DE-DB0804E05F38"
        },
        {
          "defKey": "e_phone",
          "defName": "员工电话",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "39E39939-2DEB-42E3-A74E-56D4962E6CC3",
          "id": "E7BF6C9F-EC05-44E8-9BED-745387F645D3"
        },
        {
          "defKey": "e_addr",
          "defName": "员工地址",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "8F1B9940-A088-4A46-BF05-550D429124B7",
          "id": "D0DDC313-0B81-4E88-86EC-8D4D589DEC69"
        },
        {
          "defKey": "d_no",
          "defName": "员工部门号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "82FFF4CF-6A87-475D-8D48-B3FFB0A1EB9F",
          "id": "EEBDE30D-3417-408D-8A59-BE95831A6650"
        },
        {
          "defKey": "e_avatar",
          "defName": "员工头像",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "669A3E50-6D54-4AE7-8E87-70A3806B14A3",
          "id": "9265EEEF-7FCD-4E9D-B0A8-16642D9DD013"
        }
      ],
      "correlations": [
        {
          "myField": "A60083AE-1C10-4650-A618-6F30B51577EE",
          "refEntity": "8F5AD07A-55A7-42C3-9C1B-002366874206",
          "refField": "0BAA5DBD-906A-4F50-AEE8-0E8A54A268DD",
          "myRows": "triangle-fill",
          "refRows": "none",
          "innerType": ""
        },
        {
          "myField": "A0569407-F110-4741-BAB9-8D0E8BEB2670",
          "refEntity": "8F5AD07A-55A7-42C3-9C1B-002366874206",
          "refField": "8C9BC75D-4712-409F-9768-B81D980AAC0D",
          "myRows": "triangle-fill",
          "refRows": "none",
          "innerType": ""
        }
      ],
      "indexes": [],
      "type": "P"
    },
    {
      "id": "946A027F-D7CC-446D-8331-AB66768D0341",
      "env": {
        "base": {
          "nameSpace": "",
          "codeRoot": ""
        }
      },
      "defKey": "customer",
      "defName": "客户",
      "comment": "",
      "properties": {
        "partitioned by": "(date string)",
        "row format delimited": "",
        "fields terminated by ','": "",
        "collection items terminated by '-'": "",
        "map keys terminated by ':'": "",
        "store as textfile;": ""
      },
      "sysProps": {
        "nameTemplate": "{defKey}[{defName}]"
      },
      "notes": {},
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "refKey": "defKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "defName",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "primaryKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "notNull",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "autoIncrement",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "domain",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "type",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "len",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "scale",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "comment",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "refDict",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "defaultValue",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "isStandard",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "uiHint",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr1",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr2",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr3",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr4",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr5",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr6",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr7",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr8",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr9",
          "freeze": false,
          "hideInGraph": true
        }
      ],
      "fields": [
        {
          "defKey": "c_id",
          "defName": "身份证号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "1BFCE1A2-A525-43BE-9B08-7DB1B7B94BC3",
          "id": "F78C3EBB-A05B-40AB-8CEE-26D5077CCB4B",
          "uiHint": "9999AF2A-A44E-415C-A2DC-D7C613BD0073"
        },
        {
          "defKey": "c_name",
          "defName": "客户姓名",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "8D3D0CC8-866A-4285-B8AD-AF5EAE0A12E2",
          "id": "F12017C1-36A4-4B91-9028-D94E83E78DBB",
          "uiHint": "642D2E0A-8846-4549-BE56-8C0473F26EDE"
        },
        {
          "defKey": "c_gender",
          "defName": "性别",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "751490E9-0E25-4C53-BD0D-034C34BA1C28",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "762A8D98-21C6-43E1-B2CC-D0DE1644F9FC",
          "id": "9570B4B3-6457-42AB-BB1A-1AD98BB22AF9",
          "uiHint": "0CB8A6C9-1115-4FC0-B51E-5C028065082F"
        },
        {
          "defKey": "c_age",
          "defName": "年龄",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "1D764C4A-6F9F-421E-B11A-6F3E23B51811",
          "extProps": {},
          "domain": "F7E02E94-7538-4598-8FDF-9716AE794B50",
          "id": "8E3F7412-C7E8-4682-9F87-84B22099C499",
          "uiHint": "642D2E0A-8846-4549-BE56-8C0473F26EDE"
        },
        {
          "defKey": "c_phone",
          "defName": "电话",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "39E39939-2DEB-42E3-A74E-56D4962E6CC3",
          "id": "524206E2-7A4E-4DB7-8B03-12F69DD94C22",
          "uiHint": "642D2E0A-8846-4549-BE56-8C0473F26EDE"
        },
        {
          "defKey": "c_addr",
          "defName": "地址",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "8F1B9940-A088-4A46-BF05-550D429124B7",
          "id": "D122FC03-8D33-4926-BBE4-70470A7A0B00",
          "uiHint": "642D2E0A-8846-4549-BE56-8C0473F26EDE"
        }
      ],
      "correlations": [
        {
          "myField": "F78C3EBB-A05B-40AB-8CEE-26D5077CCB4B",
          "refEntity": "8F5AD07A-55A7-42C3-9C1B-002366874206",
          "refField": "36D2B515-59C6-4423-B1CA-ED12FC05D819",
          "myRows": "triangle-fill",
          "refRows": "none",
          "innerType": ""
        }
      ],
      "indexes": [],
      "type": "P"
    },
    {
      "id": "CA91AE70-7B9C-4678-B86E-3E37966D3305",
      "env": {
        "base": {
          "nameSpace": "",
          "codeRoot": ""
        }
      },
      "defKey": "account",
      "defName": "账户",
      "comment": "",
      "properties": {
        "partitioned by": "(date string)",
        "row format delimited": "",
        "fields terminated by ','": "",
        "collection items terminated by '-'": "",
        "map keys terminated by ':'": "",
        "store as textfile;": ""
      },
      "sysProps": {
        "nameTemplate": "{defKey}[{defName}]"
      },
      "notes": {},
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "refKey": "defKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "defName",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "primaryKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "notNull",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "autoIncrement",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "domain",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "type",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "len",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "scale",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "comment",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "refDict",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "defaultValue",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "isStandard",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "uiHint",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr1",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr2",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr3",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr4",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr5",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr6",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr7",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr8",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr9",
          "freeze": false,
          "hideInGraph": true
        }
      ],
      "fields": [
        {
          "defKey": "a_no",
          "defName": "账户号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": true,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "262989EB-0807-4999-97B6-246CC54690FC",
          "id": "AF42BB34-C37C-48D0-AFB9-B41A782BDA27"
        },
        {
          "defKey": "a_type",
          "defName": "账号类型",
          "comment": "Savings, Credit, Loan",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "264A8B91-4613-4CBD-9159-5876FC4BB686",
          "id": "E37880F9-76D4-484F-BABB-6BE2D4DFB1E5"
        },
        {
          "defKey": "a_currency",
          "defName": "账号货币属性",
          "comment": "USD, CHY, EUR, JPY, GBP",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "706F6D39-656C-489B-97D1-C45FFDC9D30A",
          "id": "2B8CF07E-A424-4D52-A197-2AB3FBD2F6B3"
        },
        {
          "defKey": "a_balance",
          "defName": "账户余额",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
          "extProps": {},
          "domain": "F3B3953D-D31C-4173-9E1A-CDDCD39F9DA0",
          "id": "0DD7D457-2994-44DA-B757-B7D9D08927D0"
        },
        {
          "defKey": "a_open_time",
          "defName": "账户开户时间",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "89D69E81-EA34-42EE-9FA2-93B8BD27E098",
          "extProps": {},
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "id": "B4E44838-F61E-405B-AF63-A9B44CE3BEB3"
        }
      ],
      "correlations": [
        {
          "myField": "AF42BB34-C37C-48D0-AFB9-B41A782BDA27",
          "refEntity": "4B286FC6-F530-4D06-802F-919E79C5A090",
          "refField": "F6332863-4D63-486B-8903-99F917F58025",
          "myRows": "triangle-fill",
          "refRows": "none",
          "innerType": ""
        },
        {
          "myField": "AF42BB34-C37C-48D0-AFB9-B41A782BDA27",
          "refEntity": "1A090327-AB6E-419C-8EB9-4AECA8404A27",
          "refField": "794092A4-8A75-4EA3-BF4B-3C60EB6D3262",
          "myRows": "triangle-fill",
          "refRows": "none",
          "innerType": ""
        },
        {
          "myField": "AF42BB34-C37C-48D0-AFB9-B41A782BDA27",
          "refEntity": "46547CB3-E295-450C-9F70-E9C61200853F",
          "refField": "604EADE0-8184-4E57-ACF8-6F489E4A1DC5",
          "myRows": "triangle-fill",
          "refRows": "none",
          "innerType": ""
        },
        {
          "myField": "AF42BB34-C37C-48D0-AFB9-B41A782BDA27",
          "refEntity": "ABC77AC1-42CD-4323-86B3-CE7751061B71",
          "refField": "6C61F78B-5FA7-4BF5-B2A2-668B0391947E",
          "myRows": "triangle-fill",
          "refRows": "none",
          "innerType": ""
        },
        {
          "myField": "AF42BB34-C37C-48D0-AFB9-B41A782BDA27",
          "refEntity": "8F5AD07A-55A7-42C3-9C1B-002366874206",
          "refField": "10817992-6EC9-4D7C-9A5C-FEACCF5466EC",
          "myRows": "triangle-fill",
          "refRows": "none",
          "innerType": ""
        },
        {
          "myField": "AF42BB34-C37C-48D0-AFB9-B41A782BDA27",
          "refEntity": "6BA39086-546F-4FEE-B1D4-7A9605E6B568",
          "refField": "5A13D14D-DBF0-4E8C-87D5-79544649322B",
          "myRows": "triangle-fill",
          "refRows": "none",
          "innerType": ""
        },
        {
          "myField": "AF42BB34-C37C-48D0-AFB9-B41A782BDA27",
          "refEntity": "7A6BA843-B78A-4722-95BC-A4F9940BE5BB",
          "refField": "799A3CB4-3369-43D0-AC9B-BBDB61A65996",
          "myRows": "triangle-fill",
          "refRows": "none",
          "innerType": ""
        }
      ],
      "indexes": [],
      "type": "P"
    },
    {
      "id": "1A090327-AB6E-419C-8EB9-4AECA8404A27",
      "env": {
        "base": {
          "nameSpace": "",
          "codeRoot": ""
        }
      },
      "defKey": "savings_account",
      "defName": "储蓄账户",
      "comment": "",
      "properties": {
        "partitioned by": "(date string)",
        "row format delimited": "",
        "fields terminated by ','": "",
        "collection items terminated by '-'": "",
        "map keys terminated by ':'": "",
        "store as textfile;": ""
      },
      "sysProps": {
        "nameTemplate": "{defKey}[{defName}]"
      },
      "notes": {},
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "refKey": "defKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "defName",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "primaryKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "notNull",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "autoIncrement",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "domain",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "type",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "len",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "scale",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "comment",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "refDict",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "defaultValue",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "isStandard",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "uiHint",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr1",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr2",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr3",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr4",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr5",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr6",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr7",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr8",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr9",
          "freeze": false,
          "hideInGraph": true
        }
      ],
      "fields": [
        {
          "defKey": "a_no",
          "defName": "账户号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": true,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "262989EB-0807-4999-97B6-246CC54690FC",
          "id": "794092A4-8A75-4EA3-BF4B-3C60EB6D3262"
        },
        {
          "defKey": "sa_rate",
          "defName": "储蓄利率",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
          "extProps": {},
          "domain": "4C04FE91-5A38-485C-A47F-D463AB525215",
          "id": "7875D255-1D00-4F9A-A8E5-272838BB66CE"
        },
        {
          "defKey": "sa_withdraw_limit",
          "defName": "储蓄提款额度",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
          "extProps": {},
          "domain": "F3B3953D-D31C-4173-9E1A-CDDCD39F9DA0",
          "id": "A9AD9A2C-BA47-4328-8680-5EBD74FFDC97"
        }
      ],
      "correlations": [],
      "indexes": [],
      "type": "P"
    },
    {
      "id": "4B286FC6-F530-4D06-802F-919E79C5A090",
      "env": {
        "base": {
          "nameSpace": "",
          "codeRoot": ""
        }
      },
      "defKey": "credit_account",
      "defName": "信用卡账户",
      "comment": "",
      "properties": {
        "partitioned by": "(date string)",
        "row format delimited": "",
        "fields terminated by ','": "",
        "collection items terminated by '-'": "",
        "map keys terminated by ':'": "",
        "store as textfile;": ""
      },
      "sysProps": {
        "nameTemplate": "{defKey}[{defName}]"
      },
      "notes": {},
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "refKey": "defKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "defName",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "primaryKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "notNull",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "autoIncrement",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "domain",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "type",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "len",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "scale",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "comment",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "refDict",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "defaultValue",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "isStandard",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "uiHint",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr1",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr2",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr3",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr4",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr5",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr6",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr7",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr8",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr9",
          "freeze": false,
          "hideInGraph": true
        }
      ],
      "fields": [
        {
          "defKey": "a_no",
          "defName": "账户号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": true,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "262989EB-0807-4999-97B6-246CC54690FC",
          "id": "F6332863-4D63-486B-8903-99F917F58025"
        },
        {
          "defKey": "ca_overdraft_limit",
          "defName": "信用卡透支额度",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
          "extProps": {},
          "domain": "F3B3953D-D31C-4173-9E1A-CDDCD39F9DA0",
          "id": "3C374AA1-B8DC-4FB9-80A4-77C5C0A981C1"
        },
        {
          "defKey": "ca_current_overdraft_amount",
          "defName": "当前透支金额",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
          "extProps": {},
          "domain": "F3B3953D-D31C-4173-9E1A-CDDCD39F9DA0",
          "id": "6390723F-81C7-4A03-8747-108124DA4CC9"
        }
      ],
      "correlations": [],
      "indexes": [],
      "type": "P"
    },
    {
      "id": "6BA39086-546F-4FEE-B1D4-7A9605E6B568",
      "env": {
        "base": {
          "nameSpace": "",
          "codeRoot": ""
        }
      },
      "defKey": "loan_account",
      "defName": "贷款账户",
      "comment": "",
      "properties": {
        "partitioned by": "(date string)",
        "row format delimited": "",
        "fields terminated by ','": "",
        "collection items terminated by '-'": "",
        "map keys terminated by ':'": "",
        "store as textfile;": ""
      },
      "sysProps": {
        "nameTemplate": "{defKey}[{defName}]"
      },
      "notes": {},
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "refKey": "defKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "defName",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "primaryKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "notNull",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "autoIncrement",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "domain",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "type",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "len",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "scale",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "comment",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "refDict",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "defaultValue",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "isStandard",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "uiHint",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr1",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr2",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr3",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr4",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr5",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr6",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr7",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr8",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr9",
          "freeze": false,
          "hideInGraph": true
        }
      ],
      "fields": [
        {
          "defKey": "a_no",
          "defName": "账户号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": true,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "262989EB-0807-4999-97B6-246CC54690FC",
          "id": "5A13D14D-DBF0-4E8C-87D5-79544649322B"
        },
        {
          "defKey": "a_type",
          "defName": "账号类型",
          "comment": "Savings, Credit, Loan",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "264A8B91-4613-4CBD-9159-5876FC4BB686",
          "id": "C0E639D6-4E7B-4892-A3C7-330790AF12FC"
        },
        {
          "defKey": "la_rate",
          "defName": "贷款利率",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
          "extProps": {},
          "domain": "4C04FE91-5A38-485C-A47F-D463AB525215",
          "id": "1FDCD533-EA4C-497B-84BD-B956BAD1C351"
        },
        {
          "defKey": "la_loan_limit",
          "defName": "贷款额度",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
          "extProps": {},
          "domain": "F3B3953D-D31C-4173-9E1A-CDDCD39F9DA0",
          "id": "39C6E65D-F942-4133-A059-4D1D7D9D7131"
        }
      ],
      "correlations": [],
      "indexes": [],
      "type": "P"
    },
    {
      "id": "8F5AD07A-55A7-42C3-9C1B-002366874206",
      "env": {
        "base": {
          "nameSpace": "",
          "codeRoot": ""
        }
      },
      "defKey": "account_hold_manage",
      "defName": "账户持有和管理记录",
      "comment": "",
      "properties": {
        "partitioned by": "(date string)",
        "row format delimited": "",
        "fields terminated by ','": "",
        "collection items terminated by '-'": "",
        "map keys terminated by ':'": "",
        "store as textfile;": ""
      },
      "sysProps": {
        "nameTemplate": "{defKey}[{defName}]"
      },
      "notes": {},
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "refKey": "defKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "defName",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "primaryKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "notNull",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "autoIncrement",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "domain",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "type",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "len",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "scale",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "comment",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "refDict",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "defaultValue",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "isStandard",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "uiHint",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr1",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr2",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr3",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr4",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr5",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr6",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr7",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr8",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr9",
          "freeze": false,
          "hideInGraph": true
        }
      ],
      "fields": [
        {
          "defKey": "a_no",
          "defName": "账户号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "262989EB-0807-4999-97B6-246CC54690FC",
          "id": "10817992-6EC9-4D7C-9A5C-FEACCF5466EC"
        },
        {
          "defKey": "b_name",
          "defName": "银行名称",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "8346BD3A-7BD4-4AFC-9DD1-B82D82D67F8A",
          "id": "0BAA5DBD-906A-4F50-AEE8-0E8A54A268DD"
        },
        {
          "defKey": "e_no",
          "defName": "员工号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "4E0B83F6-B24C-4E67-A32A-F59434AAF079",
          "id": "8C9BC75D-4712-409F-9768-B81D980AAC0D"
        },
        {
          "defKey": "c_id",
          "defName": "身份证号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "1BFCE1A2-A525-43BE-9B08-7DB1B7B94BC3",
          "id": "36D2B515-59C6-4423-B1CA-ED12FC05D819"
        }
      ],
      "correlations": [],
      "indexes": [],
      "type": "P"
    },
    {
      "id": "46547CB3-E295-450C-9F70-E9C61200853F",
      "env": {
        "base": {
          "nameSpace": "",
          "codeRoot": ""
        }
      },
      "defKey": "savings_account_record",
      "defName": "储蓄账户记录",
      "comment": "",
      "properties": {
        "partitioned by": "(date string)",
        "row format delimited": "",
        "fields terminated by ','": "",
        "collection items terminated by '-'": "",
        "map keys terminated by ':'": "",
        "store as textfile;": ""
      },
      "sysProps": {
        "nameTemplate": "{defKey}[{defName}]"
      },
      "notes": {},
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "refKey": "defKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "defName",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "primaryKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "notNull",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "autoIncrement",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "domain",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "type",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "len",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "scale",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "comment",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "refDict",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "defaultValue",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "isStandard",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "uiHint",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr1",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr2",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr3",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr4",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr5",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr6",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr7",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr8",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr9",
          "freeze": false,
          "hideInGraph": true
        }
      ],
      "fields": [
        {
          "defKey": "a_no",
          "defName": "账户号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "262989EB-0807-4999-97B6-246CC54690FC",
          "id": "604EADE0-8184-4E57-ACF8-6F489E4A1DC5"
        },
        {
          "defKey": "sad_time",
          "defName": "操作时间",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "89D69E81-EA34-42EE-9FA2-93B8BD27E098",
          "extProps": {},
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "id": "51C6287E-0ECA-4001-8448-2B406AFCEDFE"
        },
        {
          "defKey": "sad_other_a_no",
          "defName": "对方账户号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "262989EB-0807-4999-97B6-246CC54690FC",
          "id": "1E5F912E-50B3-46D1-822E-166F6DDAACA2"
        },
        {
          "defKey": "sad_after_balance",
          "defName": "操作后余额",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
          "extProps": {},
          "domain": "F3B3953D-D31C-4173-9E1A-CDDCD39F9DA0",
          "id": "A4310E56-5B0B-4B83-8B06-AE622136B789"
        },
        {
          "defKey": "sad_amount",
          "defName": "操作金额",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
          "extProps": {},
          "domain": "F3B3953D-D31C-4173-9E1A-CDDCD39F9DA0",
          "id": "BC9A74B9-1F6B-407E-A802-5124A5E9D120"
        },
        {
          "defKey": "sad_type",
          "defName": "操作类型",
          "comment": "deposit, withdraw, transfer_in, transfer_out",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "DCBE4401-9951-4EA1-B938-51261D0F0367",
          "id": "FE0E7334-D129-40F0-A4B4-5163BAE46344"
        }
      ],
      "correlations": [],
      "indexes": [],
      "type": "P"
    },
    {
      "id": "7A6BA843-B78A-4722-95BC-A4F9940BE5BB",
      "env": {
        "base": {
          "nameSpace": "",
          "codeRoot": ""
        }
      },
      "defKey": "credit_account_record",
      "defName": "信用卡账户记录",
      "comment": "",
      "properties": {
        "partitioned by": "(date string)",
        "row format delimited": "",
        "fields terminated by ','": "",
        "collection items terminated by '-'": "",
        "map keys terminated by ':'": "",
        "store as textfile;": ""
      },
      "sysProps": {
        "nameTemplate": "{defKey}[{defName}]"
      },
      "notes": {},
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "refKey": "defKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "defName",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "primaryKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "notNull",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "autoIncrement",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "domain",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "type",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "len",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "scale",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "comment",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "refDict",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "defaultValue",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "isStandard",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "uiHint",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr1",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr2",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr3",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr4",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr5",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr6",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr7",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr8",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr9",
          "freeze": false,
          "hideInGraph": true
        }
      ],
      "fields": [
        {
          "defKey": "a_no",
          "defName": "账户号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "262989EB-0807-4999-97B6-246CC54690FC",
          "id": "799A3CB4-3369-43D0-AC9B-BBDB61A65996"
        },
        {
          "defKey": "cad_time",
          "defName": "操作时间",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "89D69E81-EA34-42EE-9FA2-93B8BD27E098",
          "extProps": {},
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "id": "8F284256-B336-40A1-A7B0-D917AB951FAE"
        },
        {
          "defKey": "cad_other_a_no",
          "defName": "对方账户号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "262989EB-0807-4999-97B6-246CC54690FC",
          "id": "4A4F2D98-439C-42C7-8997-0C0559D28452"
        },
        {
          "defKey": "cad_after_balance",
          "defName": "操作后余额",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
          "extProps": {},
          "domain": "F3B3953D-D31C-4173-9E1A-CDDCD39F9DA0",
          "id": "F6E298E3-3BC6-4931-A322-5259422E8DF2"
        },
        {
          "defKey": "cad_after_overdraft_amount",
          "defName": "操作后透支金额",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
          "extProps": {},
          "domain": "F3B3953D-D31C-4173-9E1A-CDDCD39F9DA0",
          "id": "1CA43244-19C0-44C2-94DB-3710D6FF7B2D"
        },
        {
          "defKey": "cad_amount",
          "defName": "操作金额",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
          "extProps": {},
          "domain": "F3B3953D-D31C-4173-9E1A-CDDCD39F9DA0",
          "id": "A6065D1A-F976-4A40-BAFB-2B0B5C5606A7"
        },
        {
          "defKey": "cad_type",
          "defName": "操作类型",
          "comment": "deposit, withdraw, transfer_in, transfer_out",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "DCBE4401-9951-4EA1-B938-51261D0F0367",
          "id": "9A43C947-B4E1-4958-AE04-EC4F02A8756D"
        }
      ],
      "correlations": [],
      "indexes": [],
      "type": "P"
    },
    {
      "id": "ABC77AC1-42CD-4323-86B3-CE7751061B71",
      "env": {
        "base": {
          "nameSpace": "",
          "codeRoot": ""
        }
      },
      "defKey": "loan_grant",
      "defName": "贷款发放记录",
      "comment": "",
      "properties": {
        "partitioned by": "(date string)",
        "row format delimited": "",
        "fields terminated by ','": "",
        "collection items terminated by '-'": "",
        "map keys terminated by ':'": "",
        "store as textfile;": ""
      },
      "sysProps": {
        "nameTemplate": "{defKey}[{defName}]"
      },
      "notes": {},
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "refKey": "defKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "defName",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "primaryKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "notNull",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "autoIncrement",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "domain",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "type",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "len",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "scale",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "comment",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "refDict",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "defaultValue",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "isStandard",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "uiHint",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr1",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr2",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr3",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr4",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr5",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr6",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr7",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr8",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr9",
          "freeze": false,
          "hideInGraph": true
        }
      ],
      "fields": [
        {
          "defKey": "l_no",
          "defName": "贷款号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "430689BE-852D-4FEA-A634-3044B9D634E0",
          "id": "8180F8DF-D83E-4318-8085-5465BEA6925C"
        },
        {
          "defKey": "a_no",
          "defName": "贷款账户号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "262989EB-0807-4999-97B6-246CC54690FC",
          "id": "6C61F78B-5FA7-4BF5-B2A2-668B0391947E"
        }
      ],
      "correlations": [],
      "indexes": [],
      "type": "P"
    },
    {
      "id": "CC0B56C9-C1BA-455F-8264-030D3328EBAF",
      "env": {
        "base": {
          "nameSpace": "",
          "codeRoot": ""
        }
      },
      "defKey": "loan_repay",
      "defName": "还贷记录",
      "comment": "",
      "properties": {
        "partitioned by": "(date string)",
        "row format delimited": "",
        "fields terminated by ','": "",
        "collection items terminated by '-'": "",
        "map keys terminated by ':'": "",
        "store as textfile;": ""
      },
      "sysProps": {
        "nameTemplate": "{defKey}[{defName}]"
      },
      "notes": {},
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "refKey": "defKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "defName",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "primaryKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "notNull",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "autoIncrement",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "domain",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "type",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "len",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "scale",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "comment",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "refDict",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "defaultValue",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "isStandard",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "uiHint",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr1",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr2",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr3",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr4",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr5",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr6",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr7",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr8",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr9",
          "freeze": false,
          "hideInGraph": true
        }
      ],
      "fields": [
        {
          "defKey": "l_no",
          "defName": "贷款号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "430689BE-852D-4FEA-A634-3044B9D634E0",
          "id": "FC34F0A6-3E14-48A9-9AE0-CB2D97254793"
        },
        {
          "defKey": "lr_time",
          "defName": "还款时间",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "89D69E81-EA34-42EE-9FA2-93B8BD27E098",
          "extProps": {},
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "id": "1A204748-2718-4404-BC3B-9069EEF8D9F3"
        },
        {
          "defKey": "lr_amount",
          "defName": "还款金额",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
          "extProps": {},
          "domain": "F3B3953D-D31C-4173-9E1A-CDDCD39F9DA0",
          "id": "2C10DD81-0976-4471-A1C4-D0E9C695817F"
        }
      ],
      "correlations": [],
      "indexes": [],
      "type": "P"
    },
    {
      "id": "D4E6B7D9-1617-4E25-A329-1F7DA9044C2C",
      "env": {
        "base": {
          "nameSpace": "",
          "codeRoot": ""
        }
      },
      "defKey": "loan",
      "defName": "贷款信息",
      "comment": "",
      "properties": {
        "partitioned by": "(date string)",
        "row format delimited": "",
        "fields terminated by ','": "",
        "collection items terminated by '-'": "",
        "map keys terminated by ':'": "",
        "store as textfile;": ""
      },
      "sysProps": {
        "nameTemplate": "{defKey}[{defName}]"
      },
      "notes": {},
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "refKey": "defKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "defName",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "primaryKey",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "notNull",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "autoIncrement",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "domain",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "type",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "len",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "scale",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "comment",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "refDict",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "defaultValue",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "isStandard",
          "freeze": false,
          "hideInGraph": false
        },
        {
          "refKey": "uiHint",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr1",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr2",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr3",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr4",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr5",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr6",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr7",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr8",
          "freeze": false,
          "hideInGraph": true
        },
        {
          "refKey": "attr9",
          "freeze": false,
          "hideInGraph": true
        }
      ],
      "fields": [
        {
          "defKey": "l_no",
          "defName": "贷款号",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "430689BE-852D-4FEA-A634-3044B9D634E0",
          "id": "BA37CE00-85D3-4147-8720-E80D8E0257BA"
        },
        {
          "defKey": "l_amount",
          "defName": "贷款金额",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
          "extProps": {},
          "domain": "F3B3953D-D31C-4173-9E1A-CDDCD39F9DA0",
          "id": "9A4F914F-B6AD-485A-81E2-E733ED74BD2A"
        },
        {
          "defKey": "l_time",
          "defName": "贷款时间",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "89D69E81-EA34-42EE-9FA2-93B8BD27E098",
          "extProps": {},
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "id": "DE21B772-D0A5-4825-B5DE-5A408AF6A41E"
        },
        {
          "defKey": "l_deadline",
          "defName": "贷款期限",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "89D69E81-EA34-42EE-9FA2-93B8BD27E098",
          "extProps": {},
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "id": "A87F6912-B225-4E9D-BC7B-3CDF10877DAE"
        },
        {
          "defKey": "l_current_amount_period",
          "defName": "当前还款期数",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "1D764C4A-6F9F-421E-B11A-6F3E23B51811",
          "extProps": {},
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "id": "B92BB49F-A281-44EA-91F8-27850EBF72EE"
        },
        {
          "defKey": "l_current_amount_total",
          "defName": "当前总还款金额",
          "comment": "",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
          "extProps": {},
          "domain": "F3B3953D-D31C-4173-9E1A-CDDCD39F9DA0",
          "id": "B7D3733D-EBC3-475F-89BA-A3214EE72DA0"
        },
        {
          "defKey": "l_status",
          "defName": "贷款状态",
          "comment": "ungranted, granted_unrepaid, repaid, canceled",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "baseType": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
          "extProps": {},
          "domain": "DA59942E-CFC0-4A46-8A0C-A9104FD3752F",
          "id": "55A0E0C1-4E87-4C83-9A98-4BEC324A288F"
        }
      ],
      "correlations": [
        {
          "myField": "BA37CE00-85D3-4147-8720-E80D8E0257BA",
          "refEntity": "ABC77AC1-42CD-4323-86B3-CE7751061B71",
          "refField": "8180F8DF-D83E-4318-8085-5465BEA6925C",
          "myRows": "triangle-fill",
          "refRows": "none",
          "innerType": ""
        },
        {
          "myField": "BA37CE00-85D3-4147-8720-E80D8E0257BA",
          "refEntity": "CC0B56C9-C1BA-455F-8264-030D3328EBAF",
          "refField": "FC34F0A6-3E14-48A9-9AE0-CB2D97254793",
          "myRows": "triangle-fill",
          "refRows": "none",
          "innerType": ""
        }
      ],
      "indexes": [],
      "type": "P"
    }
  ],
  "views": [],
  "dicts": [
    {
      "defKey": "性别对应字典",
      "defName": "",
      "sort": "",
      "intro": "",
      "id": "751490E9-0E25-4C53-BD0D-034C34BA1C28",
      "items": [
        {
          "defKey": "M",
          "defName": "男",
          "sort": "1",
          "parentKey": "",
          "intro": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "9876EC88-FCB1-4D90-9DE9-3EBDBB072F17"
        },
        {
          "defKey": "F",
          "defName": "女",
          "sort": "2",
          "parentKey": "",
          "intro": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "E9F9D165-2109-466B-B329-B2DD53AE49BF"
        },
        {
          "defKey": "U",
          "defName": "未知",
          "sort": "3",
          "parentKey": "",
          "intro": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "BF515A34-86D1-44EA-AAD8-260315D1CEEE"
        }
      ]
    }
  ],
  "viewGroups": [],
  "dataTypeMapping": {
    "referURL": "",
    "mappings": [
      {
        "defKey": "string",
        "id": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
        "defName": "字串",
        "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "VARCHAR",
        "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "VARCHAR2",
        "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "VARCHAR",
        "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "VARCHAR",
        "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "VARCHAR",
        "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "VARCHAR2",
        "592C7013-143D-4E7B-AF64-0D7BF1E28230": "VARCHAR",
        "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "VARCHAR",
        "11D1FB71-A587-4217-89BA-611B8A1F83E0": "STRING",
        "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "TEXT",
        "797A1496-D649-4261-89B4-544132EC3F36": "String",
        "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "String",
        "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "String",
        "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "string",
        "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "string",
        "B91D99E0-9B7C-416C-8737-B760957DAF09": "string",
        "BDF457FD-9F98-4AC3-A705-7587B00A3BAB": "String",
        "56F4B55B-F0B8-4049-9E6B-50B95C1D793A": "VARCHAR",
        "483F9346-C99E-4014-A1D2-A554606BD8A3": "VARCHAR",
        "ABF5836C-0B7C-4007-A41C-F869325E5842": "VARCHAR"
      },
      {
        "defKey": "double",
        "id": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
        "defName": "小数",
        "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "DECIMAL",
        "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "DECIMAL",
        "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "DECIMAL",
        "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "NUMERIC",
        "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "DECIMAL",
        "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "DECIMAL",
        "592C7013-143D-4E7B-AF64-0D7BF1E28230": "NUMERIC",
        "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "NUMERIC",
        "11D1FB71-A587-4217-89BA-611B8A1F83E0": "DOUBLE",
        "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "REAL",
        "797A1496-D649-4261-89B4-544132EC3F36": "Double",
        "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "Double",
        "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "Double",
        "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "decimal",
        "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "double",
        "B91D99E0-9B7C-416C-8737-B760957DAF09": "*float64",
        "BDF457FD-9F98-4AC3-A705-7587B00A3BAB": "f64",
        "56F4B55B-F0B8-4049-9E6B-50B95C1D793A": "DECIMAL",
        "483F9346-C99E-4014-A1D2-A554606BD8A3": "DECIMAL",
        "ABF5836C-0B7C-4007-A41C-F869325E5842": "NUMERIC"
      },
      {
        "defKey": "int",
        "id": "1D764C4A-6F9F-421E-B11A-6F3E23B51811",
        "defName": "整数",
        "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "INT",
        "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "INT",
        "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "INT",
        "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "INTEGER",
        "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "INT",
        "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "INTEGER",
        "592C7013-143D-4E7B-AF64-0D7BF1E28230": "INTEGER",
        "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "INT4",
        "11D1FB71-A587-4217-89BA-611B8A1F83E0": "INT",
        "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "INTEGER",
        "797A1496-D649-4261-89B4-544132EC3F36": "Integer",
        "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "Integer",
        "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "Integer",
        "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "float",
        "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "int",
        "B91D99E0-9B7C-416C-8737-B760957DAF09": "*int",
        "BDF457FD-9F98-4AC3-A705-7587B00A3BAB": "i32",
        "56F4B55B-F0B8-4049-9E6B-50B95C1D793A": "INTEGER",
        "483F9346-C99E-4014-A1D2-A554606BD8A3": "INT",
        "ABF5836C-0B7C-4007-A41C-F869325E5842": "INTEGER"
      },
      {
        "defKey": "date",
        "id": "89D69E81-EA34-42EE-9FA2-93B8BD27E098",
        "defName": "日期",
        "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "DATETIME",
        "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "DATE",
        "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "DATETIME",
        "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "TIMESTAMP",
        "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "DATE",
        "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "DATE",
        "592C7013-143D-4E7B-AF64-0D7BF1E28230": "DATE",
        "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "DATE",
        "11D1FB71-A587-4217-89BA-611B8A1F83E0": "DATETIME",
        "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "NUMERIC",
        "797A1496-D649-4261-89B4-544132EC3F36": "Date",
        "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "Date",
        "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "Date",
        "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "DateTime",
        "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "timestamp",
        "B91D99E0-9B7C-416C-8737-B760957DAF09": "*time.Time",
        "BDF457FD-9F98-4AC3-A705-7587B00A3BAB": "DateTime<Local>",
        "56F4B55B-F0B8-4049-9E6B-50B95C1D793A": "DATE",
        "483F9346-C99E-4014-A1D2-A554606BD8A3": "DATETIME",
        "ABF5836C-0B7C-4007-A41C-F869325E5842": "DATE"
      },
      {
        "defKey": "bytes",
        "id": "D516E75B-90F5-4741-B9B3-A186A263F04C",
        "defName": "二进制",
        "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "BLOB",
        "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "BLOB",
        "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "VARBINARY",
        "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "BYTEA",
        "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "BLOB",
        "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "BLOB",
        "592C7013-143D-4E7B-AF64-0D7BF1E28230": "BYTEA",
        "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "BYTEA",
        "11D1FB71-A587-4217-89BA-611B8A1F83E0": "BINARY",
        "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "NONE",
        "797A1496-D649-4261-89B4-544132EC3F36": "byte[]",
        "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "byte[]",
        "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "byte[]",
        "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "binary",
        "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "binary",
        "B91D99E0-9B7C-416C-8737-B760957DAF09": "[]byte",
        "56F4B55B-F0B8-4049-9E6B-50B95C1D793A": "BYTE",
        "ABF5836C-0B7C-4007-A41C-F869325E5842": "BYTEA"
      },
      {
        "defKey": "largeText",
        "id": "B17BDED3-085F-40E1-9019-3B79CF2BF075",
        "defName": "大文本",
        "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "TEXT",
        "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "CLOB",
        "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "TEXT",
        "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "TEXT",
        "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "CLOB",
        "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "CLOB",
        "592C7013-143D-4E7B-AF64-0D7BF1E28230": "TEXT",
        "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "TEXT",
        "11D1FB71-A587-4217-89BA-611B8A1F83E0": "STRING",
        "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "TEXT",
        "797A1496-D649-4261-89B4-544132EC3F36": "String",
        "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "String",
        "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "String",
        "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "string",
        "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "string",
        "B91D99E0-9B7C-416C-8737-B760957DAF09": "string",
        "BDF457FD-9F98-4AC3-A705-7587B00A3BAB": "String",
        "56F4B55B-F0B8-4049-9E6B-50B95C1D793A": "TEXT",
        "483F9346-C99E-4014-A1D2-A554606BD8A3": "STRING",
        "ABF5836C-0B7C-4007-A41C-F869325E5842": "TEXT"
      }
    ]
  },
  "domains": [
    {
      "defKey": "DefaultString",
      "defName": "默认字串",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 255,
      "scale": "",
      "uiHint": "",
      "id": "9092C4E0-1A54-4859-ABBB-5B62DBC27573"
    },
    {
      "defKey": "IdOrKey",
      "defName": "主键标识",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 32,
      "scale": "",
      "uiHint": "",
      "id": "16120F75-6AA7-4483-868D-F07F511BB081"
    },
    {
      "defKey": "Name",
      "defName": "名称",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 50,
      "scale": "",
      "uiHint": "",
      "id": "54611CCC-CA4B-42E1-9F32-4944C85B85A6"
    },
    {
      "defKey": "Int",
      "defName": "整数",
      "applyFor": "1D764C4A-6F9F-421E-B11A-6F3E23B51811",
      "len": "",
      "scale": "",
      "uiHint": "",
      "id": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E"
    },
    {
      "defKey": "Double",
      "defName": "小数",
      "applyFor": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
      "len": 24,
      "scale": 6,
      "uiHint": "",
      "id": "FF4459C5-6B45-4DBF-8FC0-E06239BC05B4"
    },
    {
      "defKey": "Money",
      "defName": "金额",
      "applyFor": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
      "len": 24,
      "scale": 6,
      "uiHint": "",
      "id": "C3B1681B-99F9-4818-9E80-DE1652A51D85"
    },
    {
      "defKey": "DateTime",
      "defName": "日期时间",
      "applyFor": "89D69E81-EA34-42EE-9FA2-93B8BD27E098",
      "len": "",
      "scale": "",
      "uiHint": "",
      "id": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC"
    },
    {
      "defKey": "YesNo",
      "defName": "是否",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": "1",
      "scale": "",
      "uiHint": "",
      "id": "6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF"
    },
    {
      "defKey": "Dict",
      "defName": "数据字典",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": "32",
      "scale": "",
      "uiHint": "",
      "id": "73FD2BAD-2358-4336-B96D-45DC897BD792"
    },
    {
      "defKey": "DescText",
      "defName": "描述文本",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": "900",
      "scale": "",
      "uiHint": "",
      "id": "3E948CEC-3070-472C-AF92-F3CA11EC9D15"
    },
    {
      "defKey": "地址",
      "defName": "",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 200,
      "scale": "",
      "uiHint": "",
      "id": "8F1B9940-A088-4A46-BF05-550D429124B7"
    },
    {
      "defKey": "利率",
      "defName": "",
      "applyFor": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
      "len": 5,
      "scale": 4,
      "uiHint": "",
      "id": "4C04FE91-5A38-485C-A47F-D463AB525215"
    },
    {
      "defKey": "电话",
      "defName": "",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 20,
      "scale": "",
      "uiHint": "",
      "id": "39E39939-2DEB-42E3-A74E-56D4962E6CC3"
    },
    {
      "defKey": "身份证号",
      "defName": "",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 18,
      "scale": "",
      "uiHint": "",
      "id": "1BFCE1A2-A525-43BE-9B08-7DB1B7B94BC3"
    },
    {
      "defKey": "姓名",
      "defName": "",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 50,
      "scale": "",
      "uiHint": "",
      "id": "8D3D0CC8-866A-4285-B8AD-AF5EAE0A12E2"
    },
    {
      "defKey": "性别",
      "defName": "",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 1,
      "scale": "",
      "uiHint": "",
      "id": "762A8D98-21C6-43E1-B2CC-D0DE1644F9FC"
    },
    {
      "defKey": "年龄",
      "defName": "",
      "applyFor": "1D764C4A-6F9F-421E-B11A-6F3E23B51811",
      "len": 3,
      "scale": "",
      "uiHint": "",
      "id": "F7E02E94-7538-4598-8FDF-9716AE794B50"
    },
    {
      "defKey": "银行名称",
      "defName": "",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 50,
      "scale": "",
      "uiHint": "",
      "id": "8346BD3A-7BD4-4AFC-9DD1-B82D82D67F8A"
    },
    {
      "defKey": "部门号",
      "defName": "",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 4,
      "scale": "",
      "uiHint": "",
      "id": "82FFF4CF-6A87-475D-8D48-B3FFB0A1EB9F"
    },
    {
      "defKey": "员工号",
      "defName": "",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 9,
      "scale": "",
      "uiHint": "",
      "id": "4E0B83F6-B24C-4E67-A32A-F59434AAF079"
    },
    {
      "defKey": "账户号",
      "defName": "",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 18,
      "scale": "",
      "uiHint": "",
      "id": "262989EB-0807-4999-97B6-246CC54690FC"
    },
    {
      "defKey": "账号类型",
      "defName": "",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 20,
      "scale": "",
      "uiHint": "",
      "id": "264A8B91-4613-4CBD-9159-5876FC4BB686"
    },
    {
      "defKey": "货币属性",
      "defName": "",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 3,
      "scale": "",
      "uiHint": "",
      "id": "706F6D39-656C-489B-97D1-C45FFDC9D30A"
    },
    {
      "defKey": "账户余额",
      "defName": "",
      "applyFor": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
      "len": 20,
      "scale": 2,
      "uiHint": "",
      "id": "F3B3953D-D31C-4173-9E1A-CDDCD39F9DA0"
    },
    {
      "defKey": "员工头像",
      "defName": "",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 200,
      "scale": "",
      "uiHint": "",
      "id": "669A3E50-6D54-4AE7-8E87-70A3806B14A3"
    },
    {
      "defKey": "操作类型",
      "defName": "",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 20,
      "scale": "",
      "uiHint": "",
      "id": "DCBE4401-9951-4EA1-B938-51261D0F0367"
    },
    {
      "defKey": "贷款号",
      "defName": "",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 11,
      "scale": "",
      "uiHint": "",
      "id": "430689BE-852D-4FEA-A634-3044B9D634E0"
    },
    {
      "defKey": "贷款状态",
      "defName": "",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 20,
      "scale": "",
      "uiHint": "",
      "id": "DA59942E-CFC0-4A46-8A0C-A9104FD3752F"
    }
  ],
  "diagrams": [
    {
      "defKey": "bank manage system table graph",
      "defName": "银行管理系统表关系图",
      "relationType": "field",
      "canvasData": {
        "cells": [
          {
            "id": "01fe1985-7233-447c-b171-54532fbf5c3c",
            "shape": "group",
            "position": {
              "x": -1120,
              "y": -580
            },
            "label": "# 银行管理系统",
            "fontColor": "rgb(52, 124, 212)",
            "size": {
              "width": 2040,
              "height": 2360
            },
            "children": [
              "d3cf9095-2618-4acb-8ff4-bde6ad6ec81a",
              "eaacfbc5-6305-41c9-b181-1dbf9bf0f6dd",
              "8e21b717-3d7f-4b4c-8c1a-909d7fc38ba8",
              "ac2a72f3-1cbf-40f7-af6b-af168cde412b",
              "3ee72ff3-e232-42cf-8565-beaf0e77be83"
            ]
          },
          {
            "id": "d3cf9095-2618-4acb-8ff4-bde6ad6ec81a",
            "shape": "group",
            "position": {
              "x": -1010.000000000002,
              "y": 1059.9999999999995
            },
            "label": "## 账户记录",
            "fontColor": "rgb(117, 190, 250)",
            "parent": "01fe1985-7233-447c-b171-54532fbf5c3c",
            "size": {
              "width": 1820,
              "height": 550
            },
            "children": [
              "392b702b-de4a-41d9-ad35-235a53406d86",
              "5470301d-1e0e-44a3-9c5f-1bc94acf21af",
              "19f88797-830c-409d-ba26-03a130569f78",
              "643f0801-2ecf-42ff-90c5-fcb22057cf10",
              "612d3d14-1d13-46e1-aeb7-41079745ec35",
              "112c3554-2344-43d2-8cb8-fccb780e3777",
              "112c3554-2344-43d2-8cb8-fccb780e3777",
              "9d751727-776f-4b8f-8cb4-80b485012a1d",
              "f3695cbc-c005-4dda-af9d-32bcb691179a",
              "4fd20ceb-64a0-4a54-88d0-aecb337c78c3",
              "9d751727-776f-4b8f-8cb4-80b485012a1d",
              "f3695cbc-c005-4dda-af9d-32bcb691179a",
              "53bb6ee8-ff57-4d71-a09e-6c091d3c33c4",
              "28c8bd30-af1e-42b9-9338-503161c6e4cd",
              "f6fea38f-6a49-4160-9c9e-7ebe59aa8980"
            ]
          },
          {
            "id": "eaacfbc5-6305-41c9-b181-1dbf9bf0f6dd",
            "shape": "group",
            "position": {
              "x": -1015.0000000000015,
              "y": -440.00000000000136
            },
            "label": "## 组织\n",
            "fontColor": "#d148d1",
            "parent": "01fe1985-7233-447c-b171-54532fbf5c3c",
            "size": {
              "width": 1820,
              "height": 460
            },
            "children": [
              "f1cdb6fb-7081-4153-9533-9a7aab1edcd2",
              "3abb9112-2e7c-4adc-92ee-a8bf0d86c798",
              "5cc75222-44fc-470a-9b50-a08c58a954b5",
              "e52b2e23-e5c5-4885-b20e-4ed4fabc035b",
              "1636bb3c-320d-4356-8f80-0c19ea138fe3",
              "61007134-d1a4-481b-b475-b6916c25b4d9",
              "911e4b44-4124-4388-9003-aaafe92ac6a0",
              "d750ade4-60bf-480d-9bde-c40b0fec6fd9"
            ]
          },
          {
            "id": "392b702b-de4a-41d9-ad35-235a53406d86",
            "shape": "table",
            "position": {
              "x": -939.9999999999959,
              "y": 1251.5
            },
            "count": 0,
            "originKey": "46547CB3-E295-450C-9F70-E9C61200853F",
            "fontColor": "#000000",
            "fillColor": "rgb(117, 190, 250)",
            "parent": "d3cf9095-2618-4acb-8ff4-bde6ad6ec81a",
            "type": "P",
            "size": {
              "width": 387,
              "height": 169
            },
            "autoSize": true
          },
          {
            "id": "112c3554-2344-43d2-8cb8-fccb780e3777",
            "shape": "group",
            "position": {
              "x": -1020.000000000002,
              "y": 449.9999999999998
            },
            "label": "## 账户",
            "fontColor": "rgb(51, 153, 108)",
            "parent": "d3cf9095-2618-4acb-8ff4-bde6ad6ec81a",
            "size": {
              "width": 1820,
              "height": 610
            },
            "children": [
              "87a0d8bc-3705-4586-aee9-aa3e69bae6ed",
              "0e06ee11-9b3b-456f-a5b9-75a61f314993",
              "2dca1a40-d06a-44eb-a6be-023bab6f48bb",
              "7437667e-9bdf-4d68-bc0e-b0a34a90585c",
              "2f3f1d52-c7ac-4101-9b6a-ec53c9e6b7f6",
              "5cc75222-44fc-470a-9b50-a08c58a954b5",
              "8e21b717-3d7f-4b4c-8c1a-909d7fc38ba8",
              "ac2a72f3-1cbf-40f7-af6b-af168cde412b",
              "3ee72ff3-e232-42cf-8565-beaf0e77be83",
              "c2d89592-c02a-47a1-9238-a78834ac2114",
              "e67bb469-3395-4d83-9e9a-56b72f2a6165",
              "15bab1fe-09f0-4347-8421-acfb16144826",
              "e5e71e8c-575b-4942-80dd-32a3e799d4a6"
            ]
          },
          {
            "id": "5cc75222-44fc-470a-9b50-a08c58a954b5",
            "shape": "group",
            "position": {
              "x": -1030.000000000003,
              "y": 19.999999999999773
            },
            "label": "## 对象",
            "fontColor": "rgb(249, 186, 80)",
            "parent": "eaacfbc5-6305-41c9-b181-1dbf9bf0f6dd",
            "size": {
              "width": 1820,
              "height": 430
            },
            "children": [
              "680ba8d3-92e3-457d-991c-e93f60c78e6d",
              "c4d89967-d537-40ad-9093-6d6acd2cd2b8",
              "f5fdf19b-4549-40aa-8b87-b4e1e6475bb0",
              "a5d5d184-903f-448d-b363-f5250c41a0b1",
              "70ba16a5-0b7a-42a4-a661-1de21caff828"
            ]
          },
          {
            "id": "f5fdf19b-4549-40aa-8b87-b4e1e6475bb0",
            "shape": "table",
            "position": {
              "x": 301.0000000000001,
              "y": 150.49999999999977
            },
            "count": 0,
            "originKey": "946A027F-D7CC-446D-8331-AB66768D0341",
            "fontColor": "#000000",
            "fillColor": "rgb(249, 186, 80)",
            "parent": "5cc75222-44fc-470a-9b50-a08c58a954b5",
            "type": "P",
            "size": {
              "width": 317,
              "height": 169
            },
            "autoSize": true
          },
          {
            "id": "d750ade4-60bf-480d-9bde-c40b0fec6fd9",
            "shape": "erdRelation",
            "source": {
              "cell": "f1cdb6fb-7081-4153-9533-9a7aab1edcd2",
              "port": "19367CFC-2B51-4FD5-88EF-34D57524C0A1%in"
            },
            "target": {
              "cell": "680ba8d3-92e3-457d-991c-e93f60c78e6d",
              "port": "3FB1CF3D-BBD0-4033-9C5F-011541BC9AF7%in"
            },
            "relation": "triangle-fill:none",
            "vertices": [
              {
                "x": -929.9999999999798,
                "y": -167.99999999999056
              }
            ],
            "fillColor": "#d148d1",
            "parent": "eaacfbc5-6305-41c9-b181-1dbf9bf0f6dd",
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "61007134-d1a4-481b-b475-b6916c25b4d9",
            "shape": "erdRelation",
            "source": {
              "cell": "a5d5d184-903f-448d-b363-f5250c41a0b1",
              "port": "9F39C1D4-68BC-442A-9C83-D7ACFD0703E7%in"
            },
            "target": {
              "cell": "3abb9112-2e7c-4adc-92ee-a8bf0d86c798",
              "port": "4696F292-6863-4579-87EA-883B9CE3260C%in"
            },
            "relation": "none:triangle-fill",
            "vertices": [
              {
                "x": -875.0000000000017,
                "y": -57.99999999999136
              }
            ],
            "fillColor": "rgb(245, 220, 78)",
            "parent": "eaacfbc5-6305-41c9-b181-1dbf9bf0f6dd",
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "911e4b44-4124-4388-9003-aaafe92ac6a0",
            "shape": "erdRelation",
            "source": {
              "cell": "a5d5d184-903f-448d-b363-f5250c41a0b1",
              "port": "562425C6-ED0F-4EED-8FCA-BD83A9D17357%in"
            },
            "target": {
              "cell": "3abb9112-2e7c-4adc-92ee-a8bf0d86c798",
              "port": "6871419F-DC37-4BD9-842C-2C09DA0F958D%in"
            },
            "relation": "none:triangle-fill",
            "vertices": [
              {
                "x": -845.0000000000017,
                "y": -147.99999999999136
              }
            ],
            "fillColor": "rgb(245, 220, 78)",
            "parent": "eaacfbc5-6305-41c9-b181-1dbf9bf0f6dd",
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "70ba16a5-0b7a-42a4-a661-1de21caff828",
            "shape": "erdRelation",
            "source": {
              "cell": "a5d5d184-903f-448d-b363-f5250c41a0b1",
              "port": "F05B1097-8C36-495C-BE2B-6D2ABFBC5575%in"
            },
            "target": {
              "cell": "680ba8d3-92e3-457d-991c-e93f60c78e6d",
              "port": "6887E0EB-B0B9-4AC9-A6BE-7085B892745B%in"
            },
            "relation": "none:triangle-fill",
            "vertices": [
              {
                "x": -875.0000000000026,
                "y": 318.5000000000046
              }
            ],
            "fillColor": "rgb(245, 220, 78)",
            "parent": "5cc75222-44fc-470a-9b50-a08c58a954b5",
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "e52b2e23-e5c5-4885-b20e-4ed4fabc035b",
            "shape": "erdRelation",
            "source": {
              "cell": "c4d89967-d537-40ad-9093-6d6acd2cd2b8",
              "port": "EEBDE30D-3417-408D-8A59-BE95831A6650%out"
            },
            "target": {
              "cell": "3abb9112-2e7c-4adc-92ee-a8bf0d86c798",
              "port": "6871419F-DC37-4BD9-842C-2C09DA0F958D%out"
            },
            "relation": "none:triangle-fill",
            "vertices": [
              {
                "x": 144.9999999999983,
                "y": -147.99999999999136
              }
            ],
            "fillColor": "rgb(249, 186, 80)",
            "parent": "eaacfbc5-6305-41c9-b181-1dbf9bf0f6dd",
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "8e21b717-3d7f-4b4c-8c1a-909d7fc38ba8",
            "shape": "erdRelation",
            "source": {
              "cell": "2f3f1d52-c7ac-4101-9b6a-ec53c9e6b7f6",
              "port": "0BAA5DBD-906A-4F50-AEE8-0E8A54A268DD%in"
            },
            "target": {
              "cell": "c4d89967-d537-40ad-9093-6d6acd2cd2b8",
              "port": "A60083AE-1C10-4650-A618-6F30B51577EE%out"
            },
            "relation": "none:triangle-fill",
            "vertices": [
              {
                "x": 169.99999999999795,
                "y": 154.00000000000068
              }
            ],
            "fillColor": "rgb(90, 213, 198)",
            "parent": "01fe1985-7233-447c-b171-54532fbf5c3c",
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "ac2a72f3-1cbf-40f7-af6b-af168cde412b",
            "shape": "erdRelation",
            "source": {
              "cell": "2f3f1d52-c7ac-4101-9b6a-ec53c9e6b7f6",
              "port": "8C9BC75D-4712-409F-9768-B81D980AAC0D%in"
            },
            "target": {
              "cell": "c4d89967-d537-40ad-9093-6d6acd2cd2b8",
              "port": "A0569407-F110-4741-BAB9-8D0E8BEB2670%out"
            },
            "relation": "none:triangle-fill",
            "vertices": [
              {
                "x": 109.99999999999795,
                "y": 230.00000000000068
              }
            ],
            "fillColor": "rgb(90, 213, 198)",
            "parent": "01fe1985-7233-447c-b171-54532fbf5c3c",
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "3ee72ff3-e232-42cf-8565-beaf0e77be83",
            "shape": "erdRelation",
            "source": {
              "cell": "2f3f1d52-c7ac-4101-9b6a-ec53c9e6b7f6",
              "port": "36D2B515-59C6-4423-B1CA-ED12FC05D819%out"
            },
            "target": {
              "cell": "f5fdf19b-4549-40aa-8b87-b4e1e6475bb0",
              "port": "F78C3EBB-A05B-40AB-8CEE-26D5077CCB4B%out"
            },
            "relation": "none:triangle-fill",
            "vertices": [
              {
                "x": 740,
                "y": 188.5
              }
            ],
            "fillColor": "rgb(90, 213, 198)",
            "parent": "01fe1985-7233-447c-b171-54532fbf5c3c",
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "15bab1fe-09f0-4347-8421-acfb16144826",
            "shape": "erdRelation",
            "source": {
              "cell": "2dca1a40-d06a-44eb-a6be-023bab6f48bb",
              "port": "F6332863-4D63-486B-8903-99F917F58025%in"
            },
            "target": {
              "cell": "87a0d8bc-3705-4586-aee9-aa3e69bae6ed",
              "port": "AF42BB34-C37C-48D0-AFB9-B41A782BDA27%in"
            },
            "relation": "none:triangle-fill",
            "vertices": [
              {
                "x": -440.00000000000205,
                "y": 610.0000000000005
              }
            ],
            "fillColor": "rgb(51, 153, 108)",
            "parent": "112c3554-2344-43d2-8cb8-fccb780e3777",
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "c2d89592-c02a-47a1-9238-a78834ac2114",
            "shape": "erdRelation",
            "source": {
              "cell": "0e06ee11-9b3b-456f-a5b9-75a61f314993",
              "port": "794092A4-8A75-4EA3-BF4B-3C60EB6D3262%in"
            },
            "target": {
              "cell": "87a0d8bc-3705-4586-aee9-aa3e69bae6ed",
              "port": "AF42BB34-C37C-48D0-AFB9-B41A782BDA27%in"
            },
            "relation": "none:triangle-fill",
            "fillColor": "rgb(51, 153, 108)",
            "parent": "112c3554-2344-43d2-8cb8-fccb780e3777",
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "9d751727-776f-4b8f-8cb4-80b485012a1d",
            "shape": "erdRelation",
            "source": {
              "cell": "392b702b-de4a-41d9-ad35-235a53406d86",
              "port": "604EADE0-8184-4E57-ACF8-6F489E4A1DC5%in"
            },
            "target": {
              "cell": "87a0d8bc-3705-4586-aee9-aa3e69bae6ed",
              "port": "AF42BB34-C37C-48D0-AFB9-B41A782BDA27%in"
            },
            "relation": "none:triangle-fill",
            "vertices": [
              {
                "x": -990,
                "y": 700.0000000000005
              },
              {
                "x": -960,
                "y": 567.0000000000005
              }
            ],
            "fillColor": "rgb(117, 190, 250)",
            "parent": "d3cf9095-2618-4acb-8ff4-bde6ad6ec81a",
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "f3695cbc-c005-4dda-af9d-32bcb691179a",
            "shape": "erdRelation",
            "source": {
              "cell": "643f0801-2ecf-42ff-90c5-fcb22057cf10",
              "port": "6C61F78B-5FA7-4BF5-B2A2-668B0391947E%in"
            },
            "target": {
              "cell": "87a0d8bc-3705-4586-aee9-aa3e69bae6ed",
              "port": "AF42BB34-C37C-48D0-AFB9-B41A782BDA27%in"
            },
            "relation": "none:triangle-fill",
            "vertices": [
              {
                "x": -410,
                "y": 1080.0000000000005
              }
            ],
            "fillColor": "rgb(117, 190, 250)",
            "parent": "d3cf9095-2618-4acb-8ff4-bde6ad6ec81a",
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "1636bb3c-320d-4356-8f80-0c19ea138fe3",
            "shape": "erdRelation",
            "source": {
              "cell": "c4d89967-d537-40ad-9093-6d6acd2cd2b8",
              "port": "A60083AE-1C10-4650-A618-6F30B51577EE%in"
            },
            "target": {
              "cell": "f1cdb6fb-7081-4153-9533-9a7aab1edcd2",
              "port": "19367CFC-2B51-4FD5-88EF-34D57524C0A1%in"
            },
            "relation": "none:triangle-fill",
            "vertices": [
              {
                "x": -380.0000000000009,
                "y": 20
              }
            ],
            "fillColor": "rgb(249, 186, 80)",
            "parent": "eaacfbc5-6305-41c9-b181-1dbf9bf0f6dd",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "e67bb469-3395-4d83-9e9a-56b72f2a6165",
            "shape": "erdRelation",
            "source": {
              "cell": "2f3f1d52-c7ac-4101-9b6a-ec53c9e6b7f6",
              "port": "10817992-6EC9-4D7C-9A5C-FEACCF5466EC%in"
            },
            "target": {
              "cell": "87a0d8bc-3705-4586-aee9-aa3e69bae6ed",
              "port": "AF42BB34-C37C-48D0-AFB9-B41A782BDA27%out"
            },
            "relation": "none:triangle-fill",
            "vertices": [
              {
                "x": 159.99999999999795,
                "y": 590.0000000000005
              }
            ],
            "fillColor": "rgb(90, 213, 198)",
            "parent": "112c3554-2344-43d2-8cb8-fccb780e3777",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "e5e71e8c-575b-4942-80dd-32a3e799d4a6",
            "shape": "erdRelation",
            "source": {
              "cell": "7437667e-9bdf-4d68-bc0e-b0a34a90585c",
              "port": "5A13D14D-DBF0-4E8C-87D5-79544649322B%in"
            },
            "target": {
              "cell": "87a0d8bc-3705-4586-aee9-aa3e69bae6ed",
              "port": "AF42BB34-C37C-48D0-AFB9-B41A782BDA27%in"
            },
            "relation": "none:triangle-fill",
            "vertices": [
              {
                "x": -370.00000000000205,
                "y": 730.0000000000005
              }
            ],
            "fillColor": "rgb(51, 153, 108)",
            "parent": "112c3554-2344-43d2-8cb8-fccb780e3777",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "53bb6ee8-ff57-4d71-a09e-6c091d3c33c4",
            "shape": "erdRelation",
            "source": {
              "cell": "5470301d-1e0e-44a3-9c5f-1bc94acf21af",
              "port": "799A3CB4-3369-43D0-AC9B-BBDB61A65996%in"
            },
            "target": {
              "cell": "87a0d8bc-3705-4586-aee9-aa3e69bae6ed",
              "port": "AF42BB34-C37C-48D0-AFB9-B41A782BDA27%in"
            },
            "relation": "none:triangle-fill",
            "vertices": [
              {
                "x": -540,
                "y": 1190.0000000000002
              },
              {
                "x": -540,
                "y": 1080.0000000000002
              },
              {
                "x": -460,
                "y": 980.0000000000002
              }
            ],
            "fillColor": "rgb(117, 190, 250)",
            "parent": "d3cf9095-2618-4acb-8ff4-bde6ad6ec81a",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "28c8bd30-af1e-42b9-9338-503161c6e4cd",
            "shape": "erdRelation",
            "source": {
              "cell": "643f0801-2ecf-42ff-90c5-fcb22057cf10",
              "port": "8180F8DF-D83E-4318-8085-5465BEA6925C%out"
            },
            "target": {
              "cell": "19f88797-830c-409d-ba26-03a130569f78",
              "port": "BA37CE00-85D3-4147-8720-E80D8E0257BA%in"
            },
            "relation": "none:triangle-fill",
            "vertices": [
              {
                "x": 100,
                "y": 1270.0000000000002
              }
            ],
            "fillColor": "rgb(117, 190, 250)",
            "parent": "d3cf9095-2618-4acb-8ff4-bde6ad6ec81a",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "f6fea38f-6a49-4160-9c9e-7ebe59aa8980",
            "shape": "erdRelation",
            "source": {
              "cell": "612d3d14-1d13-46e1-aeb7-41079745ec35",
              "port": "FC34F0A6-3E14-48A9-9AE0-CB2D97254793%in"
            },
            "target": {
              "cell": "19f88797-830c-409d-ba26-03a130569f78",
              "port": "BA37CE00-85D3-4147-8720-E80D8E0257BA%out"
            },
            "relation": "none:triangle-fill",
            "vertices": [
              {
                "x": 450,
                "y": 1300.0000000000002
              }
            ],
            "fillColor": "rgb(117, 190, 250)",
            "parent": "d3cf9095-2618-4acb-8ff4-bde6ad6ec81a",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "87a0d8bc-3705-4586-aee9-aa3e69bae6ed",
            "shape": "table",
            "position": {
              "x": -291.00000000000205,
              "y": 529.0000000000059
            },
            "count": 0,
            "originKey": "CA91AE70-7B9C-4678-B86E-3E37966D3305",
            "fontColor": "#000000",
            "fillColor": "rgb(51, 153, 108)",
            "parent": "112c3554-2344-43d2-8cb8-fccb780e3777",
            "type": "P",
            "size": {
              "width": 362,
              "height": 146
            },
            "autoSize": true
          },
          {
            "id": "f1cdb6fb-7081-4153-9533-9a7aab1edcd2",
            "shape": "table",
            "position": {
              "x": -266.5000000000216,
              "y": -349.9999999999974
            },
            "count": 0,
            "originKey": "5E696AF7-9066-4D97-9791-1AD44288EBCC",
            "fontColor": "#000000",
            "fillColor": "#d148d1",
            "parent": "eaacfbc5-6305-41c9-b181-1dbf9bf0f6dd",
            "type": "P",
            "size": {
              "width": 313,
              "height": 100
            },
            "autoSize": true
          },
          {
            "id": "0e06ee11-9b3b-456f-a5b9-75a61f314993",
            "shape": "table",
            "position": {
              "x": -900.0000000000009,
              "y": 769.9999999999998
            },
            "count": 0,
            "originKey": "1A090327-AB6E-419C-8EB9-4AECA8404A27",
            "fontColor": "#000000",
            "fillColor": "rgb(116, 212, 151)",
            "parent": "112c3554-2344-43d2-8cb8-fccb780e3777",
            "type": "P",
            "size": {
              "width": 396,
              "height": 100
            },
            "autoSize": false
          },
          {
            "id": "612d3d14-1d13-46e1-aeb7-41079745ec35",
            "shape": "table",
            "position": {
              "x": 449.9999999999991,
              "y": 1140
            },
            "count": 0,
            "originKey": "CC0B56C9-C1BA-455F-8264-030D3328EBAF",
            "fontColor": "#000000",
            "fillColor": "rgb(117, 190, 250)",
            "parent": "d3cf9095-2618-4acb-8ff4-bde6ad6ec81a",
            "type": "P",
            "size": {
              "width": 320,
              "height": 100
            },
            "autoSize": true
          },
          {
            "id": "2dca1a40-d06a-44eb-a6be-023bab6f48bb",
            "shape": "table",
            "position": {
              "x": -305.0000000000018,
              "y": 769.9999999999998
            },
            "count": 0,
            "originKey": "4B286FC6-F530-4D06-802F-919E79C5A090",
            "fontColor": "#000000",
            "fillColor": "rgb(116, 212, 151)",
            "parent": "112c3554-2344-43d2-8cb8-fccb780e3777",
            "type": "P",
            "size": {
              "width": 486,
              "height": 100
            },
            "autoSize": false
          },
          {
            "id": "680ba8d3-92e3-457d-991c-e93f60c78e6d",
            "shape": "table",
            "position": {
              "x": -794.9999999999989,
              "y": 276.9999999999998
            },
            "count": 0,
            "originKey": "3E80404A-CACA-4DA5-BAE0-A25E6FDBAAA7",
            "fontColor": "#000000",
            "fillColor": "rgb(245, 220, 78)",
            "parent": "5cc75222-44fc-470a-9b50-a08c58a954b5",
            "type": "P",
            "size": {
              "width": 301,
              "height": 77
            },
            "autoSize": true
          },
          {
            "id": "5470301d-1e0e-44a3-9c5f-1bc94acf21af",
            "shape": "table",
            "position": {
              "x": -493.99999999999886,
              "y": 1228.5
            },
            "count": 0,
            "originKey": "7A6BA843-B78A-4722-95BC-A4F9940BE5BB",
            "fontColor": "#000000",
            "fillColor": "rgb(117, 190, 250)",
            "parent": "d3cf9095-2618-4acb-8ff4-bde6ad6ec81a",
            "type": "P",
            "size": {
              "width": 481,
              "height": 192
            },
            "autoSize": true
          },
          {
            "id": "643f0801-2ecf-42ff-90c5-fcb22057cf10",
            "shape": "table",
            "position": {
              "x": 29.000000000000114,
              "y": 1151.5
            },
            "count": 0,
            "originKey": "ABC77AC1-42CD-4323-86B3-CE7751061B71",
            "fontColor": "#000000",
            "fillColor": "rgb(117, 190, 250)",
            "parent": "d3cf9095-2618-4acb-8ff4-bde6ad6ec81a",
            "type": "P",
            "size": {
              "width": 292,
              "height": 77
            },
            "autoSize": true
          },
          {
            "id": "19f88797-830c-409d-ba26-03a130569f78",
            "shape": "table",
            "position": {
              "x": 224.99999999999693,
              "y": 1354
            },
            "count": 0,
            "originKey": "D4E6B7D9-1617-4E25-A329-1F7DA9044C2C",
            "fontColor": "#000000",
            "fillColor": "rgb(211, 122, 17)",
            "parent": "d3cf9095-2618-4acb-8ff4-bde6ad6ec81a",
            "type": "P",
            "size": {
              "width": 459,
              "height": 192
            },
            "autoSize": false
          },
          {
            "id": "3abb9112-2e7c-4adc-92ee-a8bf0d86c798",
            "shape": "table",
            "position": {
              "x": -294.9999999999998,
              "y": -208.99999999998204
            },
            "count": 0,
            "originKey": "4414C49A-AADA-484B-BBEE-4F63A9BAE800",
            "fontColor": "#000000",
            "fillColor": "#e988e9",
            "parent": "eaacfbc5-6305-41c9-b181-1dbf9bf0f6dd",
            "type": "P",
            "size": {
              "width": 360,
              "height": 146
            },
            "autoSize": false
          },
          {
            "id": "a5d5d184-903f-448d-b363-f5250c41a0b1",
            "shape": "table",
            "position": {
              "x": -804.0000000000025,
              "y": 82.0000000000054
            },
            "count": 0,
            "originKey": "DCE42BA8-6E5B-4399-9254-1C1227931192",
            "fontColor": "#000000",
            "fillColor": "rgb(90, 213, 198)",
            "parent": "5cc75222-44fc-470a-9b50-a08c58a954b5",
            "type": "P",
            "size": {
              "width": 357,
              "height": 100
            },
            "autoSize": true
          },
          {
            "id": "7437667e-9bdf-4d68-bc0e-b0a34a90585c",
            "shape": "table",
            "position": {
              "x": 328.99999999999693,
              "y": 779.0000000000061
            },
            "count": 0,
            "originKey": "6BA39086-546F-4FEE-B1D4-7A9605E6B568",
            "fontColor": "#000000",
            "fillColor": "rgb(116, 212, 151)",
            "parent": "112c3554-2344-43d2-8cb8-fccb780e3777",
            "type": "P",
            "size": {
              "width": 334,
              "height": 123
            },
            "autoSize": false
          },
          {
            "id": "2f3f1d52-c7ac-4101-9b6a-ec53c9e6b7f6",
            "shape": "table",
            "position": {
              "x": 257.99999999999693,
              "y": 580.5000000000059
            },
            "count": 0,
            "originKey": "8F5AD07A-55A7-42C3-9C1B-002366874206",
            "fontColor": "#000000",
            "fillColor": "rgb(90, 213, 198)",
            "parent": "112c3554-2344-43d2-8cb8-fccb780e3777",
            "type": "P",
            "size": {
              "width": 416,
              "height": 123
            },
            "autoSize": false
          },
          {
            "id": "c4d89967-d537-40ad-9093-6d6acd2cd2b8",
            "shape": "table",
            "position": {
              "x": -306.5000000000214,
              "y": 115.99999999999977
            },
            "count": 0,
            "originKey": "879C90B9-5995-4402-8B05-813D6DC4B965",
            "fontColor": "#000000",
            "fillColor": "rgb(249, 186, 80)",
            "parent": "5cc75222-44fc-470a-9b50-a08c58a954b5",
            "type": "P",
            "size": {
              "width": 338,
              "height": 238
            },
            "autoSize": true
          }
        ]
      },
      "id": "0C9D013A-E806-4B49-BB05-1A5A0F559CF1",
      "comment": ""
    },
    {
      "defKey": "bank manage system ER graph",
      "defName": "",
      "relationType": "field",
      "canvasData": {
        "cells": [
          {
            "id": "e29fc8bf-4d74-492e-a136-e11c95e0790d",
            "shape": "erdRelation",
            "source": {
              "cell": "cdfebc1a-ef03-45e7-b4f5-10206095ce06",
              "port": "bottom2"
            },
            "target": {
              "cell": "db8c7285-e2a4-4904-9293-3467707f46a8",
              "port": "out"
            },
            "relation": "none:none",
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "1"
                  }
                }
              }
            ],
            "fillColor": "#e988e9",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "9444c080-5a00-47d8-88ac-2b6782813ef0",
            "shape": "erdRelation",
            "source": {
              "cell": "db8c7285-e2a4-4904-9293-3467707f46a8",
              "port": "in"
            },
            "target": {
              "cell": "9cf1017e-5e0b-4367-8d21-a62a9a0b6d4c",
              "port": "top2"
            },
            "relation": "none:concave",
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "1"
                  }
                }
              }
            ],
            "fillColor": "rgb(245, 220, 78)",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "8aee925b-79dc-461b-bb08-b6d63354af17",
            "shape": "erdRelation",
            "source": {
              "cell": "ad3accb1-4f4c-4b1b-8973-388119cb8e84",
              "port": "bottom2"
            },
            "target": {
              "cell": "f91aec76-ff03-4f14-ba21-23bba171dd8c",
              "port": "top"
            },
            "relation": "triangle-fill:none",
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "1"
                  }
                }
              }
            ],
            "fillColor": "#d148d1",
            "router": {
              "name": "manhattan"
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "b2b1d60d-6014-4f81-8a22-e258ac50c199",
            "shape": "erdRelation",
            "source": {
              "cell": "f91aec76-ff03-4f14-ba21-23bba171dd8c",
              "port": "bottom"
            },
            "target": {
              "cell": "cdfebc1a-ef03-45e7-b4f5-10206095ce06",
              "port": "top2"
            },
            "relation": "none:none",
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "n"
                  }
                }
              }
            ],
            "fillColor": "#e988e9",
            "router": {
              "name": "manhattan"
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "6434d347-8231-4df0-bd8f-24d0b8f7763f",
            "shape": "erdRelation",
            "source": {
              "cell": "ad3accb1-4f4c-4b1b-8973-388119cb8e84",
              "port": "out2"
            },
            "target": {
              "cell": "199b1793-7c05-4b6a-ac92-ddbb6614478a",
              "port": "top"
            },
            "relation": "triangle-fill:none",
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "1"
                  }
                }
              }
            ],
            "fillColor": "#d148d1",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "1cfffcc2-4c42-434b-9ea7-8f81517a1f2a",
            "shape": "erdRelation",
            "source": {
              "cell": "9cf1017e-5e0b-4367-8d21-a62a9a0b6d4c",
              "port": "out2"
            },
            "target": {
              "cell": "0acac0a9-c9fd-4388-999b-165f9b1fa51c",
              "port": "in2"
            },
            "relation": "none:concave",
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "子类"
                  }
                }
              }
            ],
            "fillColor": "rgb(245, 220, 78)",
            "router": {
              "name": "manhattan"
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "0e8d602d-5663-4942-801a-0795f069a5fb",
            "shape": "erdRelation",
            "source": {
              "cell": "199b1793-7c05-4b6a-ac92-ddbb6614478a",
              "port": "bottom"
            },
            "target": {
              "cell": "0acac0a9-c9fd-4388-999b-165f9b1fa51c",
              "port": "out2"
            },
            "relation": "none:none",
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "n"
                  }
                }
              }
            ],
            "fillColor": "rgb(249, 186, 80)",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "c24df1f2-5a6e-4e0e-8c13-09687536b7ef",
            "shape": "erdRelation",
            "source": {
              "cell": "77dcab74-c072-4751-98fb-7ce0c60a7096",
              "port": "out"
            },
            "target": {
              "cell": "cdfebc1a-ef03-45e7-b4f5-10206095ce06",
              "port": "out2"
            },
            "relation": "none:concave",
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "1"
                  }
                }
              }
            ],
            "fillColor": "#e988e9",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "a52c0067-0c4b-4688-8ab8-0e93e3594efa",
            "shape": "erdRelation",
            "source": {
              "cell": "0acac0a9-c9fd-4388-999b-165f9b1fa51c",
              "port": "bottom2"
            },
            "target": {
              "cell": "91d3dd70-524f-4f31-b853-19d946060a0e",
              "port": "top"
            },
            "relation": "none:none",
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "1"
                  }
                }
              }
            ],
            "fillColor": "rgb(249, 186, 80)",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "c09f3b28-2c33-4a22-a99a-31fd64a4118e",
            "shape": "erdRelation",
            "source": {
              "cell": "680429c3-b0ab-46d5-bdef-d3357deea2f9",
              "port": "bottom2"
            },
            "target": {
              "cell": "47c0a5cf-ab0a-44b4-92e4-c30c808d3c98",
              "port": "top"
            },
            "relation": "none:none",
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "1"
                  }
                }
              }
            ],
            "fillColor": "rgb(249, 186, 80)",
            "router": {
              "name": "manhattan"
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "e2178c82-cfc1-438a-88fa-232bd3d6fab2",
            "shape": "erdRelation",
            "source": {
              "cell": "b6bd2186-fe23-4ae9-8f4a-f6412acc579a",
              "port": "bottom2"
            },
            "target": {
              "cell": "f01a0382-9421-438a-9eea-256f445564fd",
              "port": "top"
            },
            "relation": "none:none",
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "1"
                  }
                }
              }
            ],
            "fillColor": "rgb(116, 212, 151)",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "1b4ea792-0a1b-4afe-8795-35f1d9f09fa0",
            "shape": "erdRelation",
            "source": {
              "cell": "f01a0382-9421-438a-9eea-256f445564fd",
              "port": "bottom"
            },
            "target": {
              "cell": "648f041a-754b-4040-9f3e-8bdcc869c493",
              "port": "top2"
            },
            "relation": "none:concave",
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "n"
                  }
                }
              }
            ],
            "fillColor": "rgb(117, 190, 250)",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "fdfe8a6e-6d5e-4d51-85a1-d852b787c4e7",
            "shape": "erdRelation",
            "source": {
              "cell": "3536f9d9-0261-4c03-908f-62c4758a1a65",
              "port": "bottom2"
            },
            "target": {
              "cell": "f94811a5-1849-4aed-8436-77dac5b91615",
              "port": "top"
            },
            "relation": "none:none",
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "1"
                  }
                }
              }
            ],
            "fillColor": "rgb(116, 212, 151)",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "2a24773e-a6cf-4b6a-8b30-f35e9b5553fb",
            "shape": "erdRelation",
            "source": {
              "cell": "f94811a5-1849-4aed-8436-77dac5b91615",
              "port": "bottom"
            },
            "target": {
              "cell": "b26a219c-6457-4034-a4bf-a78beb0e9e3d",
              "port": "top2"
            },
            "relation": "none:concave",
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "n"
                  }
                }
              }
            ],
            "fillColor": "rgb(117, 190, 250)",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "63d286ea-bbbd-4761-9747-1a963e801964",
            "shape": "erdRelation",
            "source": {
              "cell": "055f776b-4231-48da-91dc-7bfa1ee5e729",
              "port": "bottom2"
            },
            "target": {
              "cell": "f7e70b48-7f22-445f-bdeb-3ab4e52f4ae2",
              "port": "top"
            },
            "relation": "none:none",
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "1"
                  }
                }
              }
            ],
            "fillColor": "rgb(116, 212, 151)",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "62211284-d470-4ab1-b43e-de87b656b4ec",
            "shape": "erdRelation",
            "source": {
              "cell": "f7e70b48-7f22-445f-bdeb-3ab4e52f4ae2",
              "port": "bottom"
            },
            "target": {
              "cell": "f66f7268-baf3-4362-97d6-7a6daee00f67",
              "port": "top2"
            },
            "relation": "none:concave",
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "n"
                  }
                }
              }
            ],
            "fillColor": "rgb(211, 122, 17)",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "baa8bb40-94f5-4900-851e-511a27fe2663",
            "shape": "erdRelation",
            "source": {
              "cell": "fe89b887-597b-49f4-b305-a029e2588259",
              "port": "out"
            },
            "target": {
              "cell": "d7929405-7640-45f6-9655-b17d3cc2ae96",
              "port": "top2"
            },
            "relation": "none:concave",
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "n"
                  }
                }
              }
            ],
            "fillColor": "rgb(117, 190, 250)",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "caa5e29e-4dfc-4ed3-9da3-d721b5f88be4",
            "shape": "erdRelation",
            "source": {
              "cell": "b6bd2186-fe23-4ae9-8f4a-f6412acc579a",
              "port": "top2"
            },
            "target": {
              "cell": "a58b5265-b0cb-42b7-bbbd-514095fc2900",
              "port": "bottom"
            },
            "relation": "none:concave",
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "子类"
                  }
                }
              }
            ],
            "fillColor": "rgb(116, 212, 151)",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "56eebc9c-bfeb-44c3-9d81-23eccbf39c84",
            "shape": "erdRelation",
            "source": {
              "cell": "3536f9d9-0261-4c03-908f-62c4758a1a65",
              "port": "top2"
            },
            "target": {
              "cell": "a58b5265-b0cb-42b7-bbbd-514095fc2900",
              "port": "bottom2"
            },
            "relation": "none:concave",
            "vertices": [],
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "子类"
                  }
                }
              }
            ],
            "fillColor": "rgb(116, 212, 151)",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "085577f7-51ad-441e-9eac-aba2e5345b0e",
            "shape": "erdRelation",
            "source": {
              "cell": "055f776b-4231-48da-91dc-7bfa1ee5e729",
              "port": "top2"
            },
            "target": {
              "cell": "a58b5265-b0cb-42b7-bbbd-514095fc2900",
              "port": "bottom3"
            },
            "relation": "none:concave",
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "子类"
                  }
                }
              }
            ],
            "fillColor": "rgb(116, 212, 151)",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "c25c49d1-083b-44fa-aa42-b6844a13fff6",
            "shape": "erdRelation",
            "source": {
              "cell": "91d3dd70-524f-4f31-b853-19d946060a0e",
              "port": "bottom"
            },
            "target": {
              "cell": "a58b5265-b0cb-42b7-bbbd-514095fc2900",
              "port": "top2"
            },
            "relation": "none:concave",
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "n"
                  }
                }
              }
            ],
            "fillColor": "rgb(51, 153, 108)",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "3d2461b9-5c9a-4429-89f8-cac019b42ca9",
            "shape": "erdRelation",
            "source": {
              "cell": "47c0a5cf-ab0a-44b4-92e4-c30c808d3c98",
              "port": "bottom"
            },
            "target": {
              "cell": "a58b5265-b0cb-42b7-bbbd-514095fc2900",
              "port": "out2"
            },
            "relation": "none:concave",
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "n"
                  }
                }
              }
            ],
            "fillColor": "rgb(51, 153, 108)",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "96b938c1-7df8-4fcf-a255-917102454b82",
            "shape": "erdRelation",
            "source": {
              "cell": "0acac0a9-c9fd-4388-999b-165f9b1fa51c",
              "port": "top"
            },
            "target": {
              "cell": "77dcab74-c072-4751-98fb-7ce0c60a7096",
              "port": "in"
            },
            "relation": "none:none",
            "vertices": [
              {
                "x": -380,
                "y": 50
              }
            ],
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "n"
                  }
                }
              }
            ],
            "fillColor": "rgb(249, 186, 80)",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "fc96ac3a-5c24-4a69-be99-ba2eb64553c7",
            "shape": "erdRelation",
            "source": {
              "cell": "f66f7268-baf3-4362-97d6-7a6daee00f67",
              "port": "out2"
            },
            "target": {
              "cell": "fe89b887-597b-49f4-b305-a029e2588259",
              "port": "in"
            },
            "relation": "none:none",
            "vertices": [
              {
                "x": 10,
                "y": 600
              }
            ],
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "1"
                  }
                }
              }
            ],
            "fillColor": "rgb(211, 122, 17)",
            "router": {
              "name": "manhattan",
              "args": {
                "excludeShapes": [
                  "group"
                ]
              }
            },
            "connector": {
              "name": "rounded",
              "args": {
                "radius": 10
              }
            },
            "attrs": {
              "line": {
                "strokeDasharray": ""
              }
            }
          },
          {
            "id": "ad3accb1-4f4c-4b1b-8973-388119cb8e84",
            "shape": "edit-node-circle",
            "position": {
              "x": -370,
              "y": -420
            },
            "label": "# 银行",
            "fontColor": "#000000",
            "fillColor": "#d148d1",
            "size": {
              "width": 170,
              "height": 60
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "in",
                  "id": "in2"
                },
                {
                  "group": "in",
                  "id": "in3"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "out",
                  "id": "out2"
                },
                {
                  "group": "out",
                  "id": "out3"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "top",
                  "id": "top2"
                },
                {
                  "group": "top",
                  "id": "top3"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                },
                {
                  "group": "bottom",
                  "id": "bottom2"
                },
                {
                  "group": "bottom",
                  "id": "bottom3"
                }
              ]
            }
          },
          {
            "id": "cdfebc1a-ef03-45e7-b4f5-10206095ce06",
            "shape": "edit-node-circle",
            "position": {
              "x": -370,
              "y": -160.00000000000006
            },
            "label": "## 部门",
            "fontColor": "#000000",
            "fillColor": "#e988e9",
            "size": {
              "width": 170,
              "height": 60
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "in",
                  "id": "in2"
                },
                {
                  "group": "in",
                  "id": "in3"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "out",
                  "id": "out2"
                },
                {
                  "group": "out",
                  "id": "out3"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "top",
                  "id": "top2"
                },
                {
                  "group": "top",
                  "id": "top3"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                },
                {
                  "group": "bottom",
                  "id": "bottom2"
                },
                {
                  "group": "bottom",
                  "id": "bottom3"
                }
              ]
            }
          },
          {
            "id": "9cf1017e-5e0b-4367-8d21-a62a9a0b6d4c",
            "shape": "edit-node-circle",
            "position": {
              "x": -735,
              "y": 70
            },
            "label": "## 经理",
            "fontColor": "#000000",
            "fillColor": "rgb(245, 220, 78)",
            "size": {
              "width": 160,
              "height": 60
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "in",
                  "id": "in2"
                },
                {
                  "group": "in",
                  "id": "in3"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "out",
                  "id": "out2"
                },
                {
                  "group": "out",
                  "id": "out3"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "top",
                  "id": "top2"
                },
                {
                  "group": "top",
                  "id": "top3"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                },
                {
                  "group": "bottom",
                  "id": "bottom2"
                },
                {
                  "group": "bottom",
                  "id": "bottom3"
                }
              ]
            }
          },
          {
            "id": "0acac0a9-c9fd-4388-999b-165f9b1fa51c",
            "shape": "edit-node-circle",
            "position": {
              "x": -365,
              "y": 70
            },
            "label": "## 员工",
            "fontColor": "#000000",
            "fillColor": "rgb(249, 186, 80)",
            "size": {
              "width": 160,
              "height": 60
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "in",
                  "id": "in2"
                },
                {
                  "group": "in",
                  "id": "in3"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "out",
                  "id": "out2"
                },
                {
                  "group": "out",
                  "id": "out3"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "top",
                  "id": "top2"
                },
                {
                  "group": "top",
                  "id": "top3"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                },
                {
                  "group": "bottom",
                  "id": "bottom2"
                },
                {
                  "group": "bottom",
                  "id": "bottom3"
                }
              ]
            }
          },
          {
            "id": "db8c7285-e2a4-4904-9293-3467707f46a8",
            "shape": "edit-node-polygon",
            "position": {
              "x": -565,
              "y": -110
            },
            "label": "任命",
            "fontColor": "#000000",
            "fillColor": "rgb(255, 137, 175)",
            "size": {
              "width": 90,
              "height": 90
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                }
              ]
            }
          },
          {
            "id": "f91aec76-ff03-4f14-ba21-23bba171dd8c",
            "shape": "edit-node-polygon",
            "position": {
              "x": -325,
              "y": -301
            },
            "label": "属于",
            "fontColor": "#000000",
            "fillColor": "rgb(255, 137, 175)",
            "size": {
              "width": 80,
              "height": 80,
              "minHeight": 20
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                }
              ]
            }
          },
          {
            "id": "199b1793-7c05-4b6a-ac92-ddbb6614478a",
            "shape": "edit-node-polygon",
            "position": {
              "x": -140,
              "y": -260
            },
            "label": "属于",
            "fontColor": "#000000",
            "fillColor": "rgb(255, 137, 175)",
            "note": "",
            "size": {
              "width": 80,
              "height": 80,
              "minHeight": 20
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                }
              ]
            }
          },
          {
            "id": "77dcab74-c072-4751-98fb-7ce0c60a7096",
            "shape": "edit-node-polygon",
            "position": {
              "x": -325,
              "y": -40
            },
            "label": "属于",
            "fontColor": "#000000",
            "fillColor": "rgb(255, 137, 175)",
            "note": "",
            "size": {
              "width": 80,
              "height": 80,
              "minHeight": 20
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                }
              ]
            }
          },
          {
            "id": "b6bd2186-fe23-4ae9-8f4a-f6412acc579a",
            "shape": "edit-node-circle",
            "position": {
              "x": -735,
              "y": 457.00000000000034
            },
            "label": "## 储蓄账户",
            "fontColor": "#000000",
            "fillColor": "rgb(116, 212, 151)",
            "size": {
              "width": 170,
              "height": 60
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "in",
                  "id": "in2"
                },
                {
                  "group": "in",
                  "id": "in3"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "out",
                  "id": "out2"
                },
                {
                  "group": "out",
                  "id": "out3"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "top",
                  "id": "top2"
                },
                {
                  "group": "top",
                  "id": "top3"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                },
                {
                  "group": "bottom",
                  "id": "bottom2"
                },
                {
                  "group": "bottom",
                  "id": "bottom3"
                }
              ]
            }
          },
          {
            "id": "3536f9d9-0261-4c03-908f-62c4758a1a65",
            "shape": "edit-node-circle",
            "position": {
              "x": -370,
              "y": 457.00000000000034
            },
            "label": "## 信用卡账户",
            "fontColor": "#000000",
            "fillColor": "rgb(116, 212, 151)",
            "size": {
              "width": 170,
              "height": 60
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "in",
                  "id": "in2"
                },
                {
                  "group": "in",
                  "id": "in3"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "out",
                  "id": "out2"
                },
                {
                  "group": "out",
                  "id": "out3"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "top",
                  "id": "top2"
                },
                {
                  "group": "top",
                  "id": "top3"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                },
                {
                  "group": "bottom",
                  "id": "bottom2"
                },
                {
                  "group": "bottom",
                  "id": "bottom3"
                }
              ]
            }
          },
          {
            "id": "055f776b-4231-48da-91dc-7bfa1ee5e729",
            "shape": "edit-node-circle",
            "position": {
              "x": 20,
              "y": 457.00000000000034
            },
            "label": "## 贷款账户",
            "fontColor": "#000000",
            "fillColor": "rgb(116, 212, 151)",
            "size": {
              "width": 170,
              "height": 60
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "in",
                  "id": "in2"
                },
                {
                  "group": "in",
                  "id": "in3"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "out",
                  "id": "out2"
                },
                {
                  "group": "out",
                  "id": "out3"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "top",
                  "id": "top2"
                },
                {
                  "group": "top",
                  "id": "top3"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                },
                {
                  "group": "bottom",
                  "id": "bottom2"
                },
                {
                  "group": "bottom",
                  "id": "bottom3"
                }
              ]
            }
          },
          {
            "id": "91d3dd70-524f-4f31-b853-19d946060a0e",
            "shape": "edit-node-polygon",
            "position": {
              "x": -325,
              "y": 175
            },
            "label": "管理",
            "fillColor": "rgb(255, 137, 175)",
            "note": "",
            "size": {
              "width": 80,
              "height": 80,
              "minHeight": 20
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                }
              ]
            }
          },
          {
            "id": "47c0a5cf-ab0a-44b4-92e4-c30c808d3c98",
            "shape": "edit-node-polygon",
            "position": {
              "x": 30,
              "y": 197
            },
            "label": "拥有",
            "fontColor": "#000000",
            "fillColor": "rgb(255, 137, 175)",
            "size": {
              "width": 80,
              "height": 80,
              "minHeight": 20
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                }
              ]
            }
          },
          {
            "id": "648f041a-754b-4040-9f3e-8bdcc869c493",
            "shape": "edit-node-circle",
            "position": {
              "x": -810,
              "y": 690
            },
            "label": "## 储蓄账户记录",
            "fontColor": "#000000",
            "fillColor": "rgb(117, 190, 250)",
            "note": "",
            "size": {
              "width": 170,
              "height": 60
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "in",
                  "id": "in2"
                },
                {
                  "group": "in",
                  "id": "in3"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "out",
                  "id": "out2"
                },
                {
                  "group": "out",
                  "id": "out3"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "top",
                  "id": "top2"
                },
                {
                  "group": "top",
                  "id": "top3"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                },
                {
                  "group": "bottom",
                  "id": "bottom2"
                },
                {
                  "group": "bottom",
                  "id": "bottom3"
                }
              ]
            }
          },
          {
            "id": "b26a219c-6457-4034-a4bf-a78beb0e9e3d",
            "shape": "edit-node-circle",
            "position": {
              "x": -490,
              "y": 690
            },
            "label": "## 信用卡账户记录",
            "fontColor": "#000000",
            "fillColor": "rgb(117, 190, 250)",
            "note": "",
            "size": {
              "width": 170,
              "height": 60
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "in",
                  "id": "in2"
                },
                {
                  "group": "in",
                  "id": "in3"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "out",
                  "id": "out2"
                },
                {
                  "group": "out",
                  "id": "out3"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "top",
                  "id": "top2"
                },
                {
                  "group": "top",
                  "id": "top3"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                },
                {
                  "group": "bottom",
                  "id": "bottom2"
                },
                {
                  "group": "bottom",
                  "id": "bottom3"
                }
              ]
            }
          },
          {
            "id": "f01a0382-9421-438a-9eea-256f445564fd",
            "shape": "edit-node-polygon",
            "position": {
              "x": -765,
              "y": 560
            },
            "label": "存在",
            "fillColor": "rgb(255, 137, 175)",
            "size": {
              "width": 80,
              "height": 80,
              "minHeight": 20
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                }
              ]
            }
          },
          {
            "id": "f94811a5-1849-4aed-8436-77dac5b91615",
            "shape": "edit-node-polygon",
            "position": {
              "x": -445,
              "y": 560
            },
            "label": "存在",
            "fillColor": "rgb(255, 137, 175)",
            "size": {
              "width": 80,
              "height": 80,
              "minHeight": 20
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                }
              ]
            }
          },
          {
            "id": "f66f7268-baf3-4362-97d6-7a6daee00f67",
            "shape": "edit-node-circle",
            "position": {
              "x": -190,
              "y": 690
            },
            "label": "## 贷款",
            "fontColor": "#000000",
            "fillColor": "rgb(211, 122, 17)",
            "note": "",
            "size": {
              "width": 160,
              "height": 60
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "in",
                  "id": "in2"
                },
                {
                  "group": "in",
                  "id": "in3"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "out",
                  "id": "out2"
                },
                {
                  "group": "out",
                  "id": "out3"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "top",
                  "id": "top2"
                },
                {
                  "group": "top",
                  "id": "top3"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                },
                {
                  "group": "bottom",
                  "id": "bottom2"
                },
                {
                  "group": "bottom",
                  "id": "bottom3"
                }
              ]
            }
          },
          {
            "id": "f7e70b48-7f22-445f-bdeb-3ab4e52f4ae2",
            "shape": "edit-node-polygon",
            "position": {
              "x": -150,
              "y": 560
            },
            "label": "申请",
            "fillColor": "rgb(255, 137, 175)",
            "note": "",
            "size": {
              "width": 80,
              "height": 80,
              "minHeight": 20
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                }
              ]
            }
          },
          {
            "id": "fe89b887-597b-49f4-b305-a029e2588259",
            "shape": "edit-node-polygon",
            "position": {
              "x": 65,
              "y": 560
            },
            "label": "存在",
            "fontColor": "#000000",
            "fillColor": "rgb(255, 137, 175)",
            "size": {
              "width": 80,
              "height": 80,
              "minHeight": 20
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                }
              ]
            }
          },
          {
            "id": "680429c3-b0ab-46d5-bdef-d3357deea2f9",
            "shape": "edit-node-circle",
            "position": {
              "x": -10,
              "y": 70
            },
            "label": "## 客户",
            "fontColor": "#000000",
            "fillColor": "rgb(249, 186, 80)",
            "parent": "142fdce3-bf40-4035-b781-3835e99d3c7a",
            "size": {
              "width": 160,
              "height": 60
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "in",
                  "id": "in2"
                },
                {
                  "group": "in",
                  "id": "in3"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "out",
                  "id": "out2"
                },
                {
                  "group": "out",
                  "id": "out3"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "top",
                  "id": "top2"
                },
                {
                  "group": "top",
                  "id": "top3"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                },
                {
                  "group": "bottom",
                  "id": "bottom2"
                },
                {
                  "group": "bottom",
                  "id": "bottom3"
                }
              ]
            }
          },
          {
            "id": "a58b5265-b0cb-42b7-bbbd-514095fc2900",
            "shape": "edit-node-circle",
            "position": {
              "x": -370,
              "y": 307.00000000000034
            },
            "label": "## 账户",
            "fontColor": "#000000",
            "fillColor": "rgb(51, 153, 108)",
            "parent": "142fdce3-bf40-4035-b781-3835e99d3c7a",
            "size": {
              "width": 170,
              "height": 60
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "in",
                  "id": "in2"
                },
                {
                  "group": "in",
                  "id": "in3"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "out",
                  "id": "out2"
                },
                {
                  "group": "out",
                  "id": "out3"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "top",
                  "id": "top2"
                },
                {
                  "group": "top",
                  "id": "top3"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                },
                {
                  "group": "bottom",
                  "id": "bottom2"
                },
                {
                  "group": "bottom",
                  "id": "bottom3"
                }
              ]
            }
          },
          {
            "id": "d7929405-7640-45f6-9655-b17d3cc2ae96",
            "shape": "edit-node-circle",
            "position": {
              "x": 100,
              "y": 690
            },
            "label": "## 还贷记录",
            "fontColor": "#000000",
            "fillColor": "rgb(117, 190, 250)",
            "size": {
              "width": 150,
              "height": 60
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "in",
                  "id": "in2"
                },
                {
                  "group": "in",
                  "id": "in3"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "out",
                  "id": "out2"
                },
                {
                  "group": "out",
                  "id": "out3"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "top",
                  "id": "top2"
                },
                {
                  "group": "top",
                  "id": "top3"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                },
                {
                  "group": "bottom",
                  "id": "bottom2"
                },
                {
                  "group": "bottom",
                  "id": "bottom3"
                }
              ]
            }
          }
        ]
      },
      "id": "432F5157-7B9A-48D5-BA0D-49618F27FC11",
      "comment": ""
    }
  ],
  "standardFields": [],
  "dbConn": [
    {
      "defKey": "AEE65DA9-0212-404E-8DB0-5BE6C11D986B",
      "defName": "mysql_demo",
      "type": "29D1CE08-4C35-4D2D-AAA9-23D93305B52E",
      "properties": {
        "driver_class_name": "com.mysql.cj.jdbc.Driver",
        "url": "jdbc:mysql://127.0.0.1:3306/library?characterEncoding=UTF-8&useSSL=false&useUnicode=true&serverTimezone=UTC",
        "password": "030428",
        "username": "root"
      }
    }
  ],
  "logicEntities": [],
  "namingRules": [
    {
      "id": "63F1DC0E-6A76-4B75-B3DA-4B00657B4E1B",
      "defName": "属性代码不能超过32",
      "intro": "",
      "controlIntensity": "S",
      "applyObjectType": "L",
      "applyFieldType": "field",
      "programCode": "return (data.field.defName||\"\").length <= 32",
      "enable": true
    },
    {
      "id": "668CBEE6-E0B7-4ACE-B72E-63942963B191",
      "defName": "长度不能超过32位",
      "intro": "",
      "controlIntensity": "F",
      "applyObjectType": "P",
      "applyFieldType": "entity",
      "programCode": "return (data.entity.defName||\"\").length <= 32",
      "enable": true
    },
    {
      "id": "11BD987F-82E7-418E-A752-FDD84F1582A2",
      "defName": "长度不能超过32位",
      "intro": "",
      "controlIntensity": "F",
      "applyObjectType": "P",
      "applyFieldType": "field",
      "programCode": "return (data.field.defName||\"\").length <= 32",
      "enable": true
    },
    {
      "id": "29D0A8D9-ABE2-451F-8A39-52FAB02E62B9",
      "defName": "索引名-长度不超过32个字符",
      "intro": "",
      "controlIntensity": "S",
      "applyObjectType": "P",
      "applyFieldType": "index",
      "programCode": "return (data.index.defName||\"\").length <= 32",
      "enable": true
    },
    {
      "id": "B425A96F-6A31-4DBD-8743-A00DE28FB50F",
      "defName": "不能使用保留字",
      "intro": "",
      "controlIntensity": "S",
      "applyObjectType": "P",
      "applyFieldType": "index",
      "programCode": "let sysWords = \"action,add,aggregate,all,alter,after,and,as,asc,avg,avg_row_length,auto_increment,between,bigint,bit,binary,blob,bool,both,by,cascade,case,char,character,change,check,checksum,column,columns,comment,constraint,create,cross,current_date,current_time,current_timestamp,data,database,databases,date,datetime,day,day_hour,day_minute,day_second,dayofmonth,dayofweek,dayofyear,dec,decimal,default,delayed,delay_key_write,delete,desc,describe,distinct,distinctrow,double,drop,end,else,escape,escaped,enclosed,enum,explain,exists,fields,file,first,float,float4,float8,flush,foreign,from,for,full,function,global,grant,grants,group,having,heap,high_priority,hour,hour_minute,hour_second,hosts,identified,ignore,in,index,infile,inner,insert,insert_id,int,integer,interval,int1,int2,int3,int4,int8,into,if,is,isam,join,key,keys,kill,last_insert_id,leading,left,length,like,lines,limit,load,local,lock,logs,long,longblob,longtext,low_priority,max,max_rows,match,mediumblob,mediumtext,mediumint,middleint,min_rows,minute,minute_second,modify,month,monthname,myisam,natural,numeric,no,not,null,on,optimize,option,optionally,or,order,outer,outfile,pack_keys,partial,password,precision,primary,procedure,process,processlist,privileges,read,real,references,reload,regexp,rename,replace,restrict,returns,revoke,rlike,row,rows,second,select,set,show,shutdown,smallint,soname,sql_big_tables,sql_big_selects,sql_low_priority_updates,sql_log_off,sql_log_update,sql_select_limit,sql_small_result,sql_big_result,sql_warnings,straight_join,starting,status,string,table,tables,temporary,terminated,text,then,time,timestamp,tinyblob,tinytext,tinyint,trailing,to,type,use,using,unique,unlock,unsigned,update,usage,values,varchar,variables,varying,varbinary,with,write,when,where,year,year_month,zerofill\".split(\",\");\nreturn sysWords.indexOf(data.index.defKey.toLowerCase())<0;",
      "enable": true
    },
    {
      "id": "EF9E44D0-691A-4352-A079-CFF300107531",
      "defName": "索引名-全小写",
      "intro": "",
      "controlIntensity": "F",
      "applyObjectType": "P",
      "applyFieldType": "index",
      "programCode": "return !/[A-Z]+/.test(data.index.defKey);",
      "enable": true
    },
    {
      "id": "972EB2FB-4428-429D-8B0A-F082A8C7A94D",
      "defName": "名称不能为空",
      "intro": "",
      "controlIntensity": "F",
      "applyObjectType": "L",
      "applyFieldType": "entity",
      "programCode": "return data.logicEntity.defName",
      "enable": true
    },
    {
      "id": "EEAEB9C5-BB6C-4E92-949B-D27928690D85",
      "defName": "名称长度不超过32",
      "intro": "",
      "controlIntensity": "S",
      "applyObjectType": "L",
      "applyFieldType": "entity",
      "programCode": "return (data.logicEntity.defName||\"\").length <=32",
      "enable": true
    },
    {
      "id": "24E3F7E5-730D-4378-B72D-195D6B940352",
      "defName": "不能使用保留字",
      "intro": "",
      "controlIntensity": "F",
      "applyObjectType": "P",
      "applyFieldType": "entity",
      "programCode": "let sysWords = \"action,add,aggregate,all,alter,after,and,as,asc,avg,avg_row_length,auto_increment,between,bigint,bit,binary,blob,bool,both,by,cascade,case,char,character,change,check,checksum,column,columns,comment,constraint,create,cross,current_date,current_time,current_timestamp,data,database,databases,date,datetime,day,day_hour,day_minute,day_second,dayofmonth,dayofweek,dayofyear,dec,decimal,default,delayed,delay_key_write,delete,desc,describe,distinct,distinctrow,double,drop,end,else,escape,escaped,enclosed,enum,explain,exists,fields,file,first,float,float4,float8,flush,foreign,from,for,full,function,global,grant,grants,group,having,heap,high_priority,hour,hour_minute,hour_second,hosts,identified,ignore,in,index,infile,inner,insert,insert_id,int,integer,interval,int1,int2,int3,int4,int8,into,if,is,isam,join,key,keys,kill,last_insert_id,leading,left,length,like,lines,limit,load,local,lock,logs,long,longblob,longtext,low_priority,max,max_rows,match,mediumblob,mediumtext,mediumint,middleint,min_rows,minute,minute_second,modify,month,monthname,myisam,natural,numeric,no,not,null,on,optimize,option,optionally,or,order,outer,outfile,pack_keys,partial,password,precision,primary,procedure,process,processlist,privileges,read,real,references,reload,regexp,rename,replace,restrict,returns,revoke,rlike,row,rows,second,select,set,show,shutdown,smallint,soname,sql_big_tables,sql_big_selects,sql_low_priority_updates,sql_log_off,sql_log_update,sql_select_limit,sql_small_result,sql_big_result,sql_warnings,straight_join,starting,status,string,table,tables,temporary,terminated,text,then,time,timestamp,tinyblob,tinytext,tinyint,trailing,to,type,use,using,unique,unlock,unsigned,update,usage,values,varchar,variables,varying,varbinary,with,write,when,where,year,year_month,zerofill\".split(\",\");\nreturn sysWords.indexOf(data.entity.defKey.toLowerCase())<0;",
      "enable": true
    },
    {
      "id": "039BF435-DC77-4DA4-81C7-7F8076BF22BB",
      "defName": "表名-全小写",
      "intro": "",
      "controlIntensity": "S",
      "applyObjectType": "P",
      "applyFieldType": "entity",
      "programCode": "return !/[A-Z]+/.test(data.entity.defKey);",
      "enable": true
    },
    {
      "id": "CBEB0E30-19C6-427D-A8BF-61FF10E27A0B",
      "defName": "表名-不允许空格",
      "intro": "",
      "controlIntensity": "F",
      "applyObjectType": "P",
      "applyFieldType": "entity",
      "programCode": "return !/\\s+/.test(data.entity.defKey);",
      "enable": true
    },
    {
      "id": "1168C7C2-8E8E-4FB7-B639-B3DE839C395A",
      "defName": "表名-英文及下划线",
      "intro": "",
      "controlIntensity": "F",
      "applyObjectType": "P",
      "applyFieldType": "entity",
      "programCode": "return /^[a-zA-Z_][a-zA-Z0-9_]*$/.test(data.entity.defKey);",
      "enable": true
    },
    {
      "id": "D373637C-D3A6-4621-B656-6841A5444A76",
      "defName": "表必须有comment注释",
      "intro": "",
      "controlIntensity": "S",
      "applyObjectType": "P",
      "applyFieldType": "entity",
      "programCode": "return (data.entity.defName||\"\").length > 0 || (data.entity.comment||\"\").length > 0",
      "enable": true
    },
    {
      "id": "2BAB122B-8811-40BB-89F3-CDC24B5862D3",
      "defName": "主键命名为 id，类型为 int 或 bigint，且为自增",
      "intro": "",
      "controlIntensity": "S",
      "applyObjectType": "P",
      "applyFieldType": "entity",
      "programCode": "let fields = data.entity.fields;\nfor(let i=0;i<fields.length;i++){\n    let field = fields[i];\n    if(field.primaryKey){\n        return field.autoIncrement && (field.dbType.toUpperCase()==\"INT\"||field.dbType==\"BIGINT\");\n    }\n}\nreturn false;",
      "enable": true
    },
    {
      "id": "0B2F0BD2-3B84-4AB1-BA29-9DE9620AF608",
      "defName": "必须有数据的创建时间以及创建人字段",
      "intro": "",
      "controlIntensity": "S",
      "applyObjectType": "P",
      "applyFieldType": "entity",
      "programCode": "let count = 0;\nlet fields = data.entity.fields;\nfor(let i=0;i<fields.length;i++){\n    let field = fields[i];\n    if(\"created_time,updated_time\".indexOf(field.defKey.toLowerCase())>=0){\n        count ++;\n    }\n}\nreturn count==2;",
      "enable": true
    },
    {
      "id": "BEC54F19-52D5-4882-BCE1-4439785F8001",
      "defName": "不能使用保留字",
      "intro": "",
      "controlIntensity": "S",
      "applyObjectType": "P",
      "applyFieldType": "field",
      "programCode": "let sysWords = \"action,add,aggregate,all,alter,after,and,as,asc,avg,avg_row_length,auto_increment,between,bigint,bit,binary,blob,bool,both,by,cascade,case,char,character,change,check,checksum,column,columns,comment,constraint,create,cross,current_date,current_time,current_timestamp,data,database,databases,date,datetime,day,day_hour,day_minute,day_second,dayofmonth,dayofweek,dayofyear,dec,decimal,default,delayed,delay_key_write,delete,desc,describe,distinct,distinctrow,double,drop,end,else,escape,escaped,enclosed,enum,explain,exists,fields,file,first,float,float4,float8,flush,foreign,from,for,full,function,global,grant,grants,group,having,heap,high_priority,hour,hour_minute,hour_second,hosts,identified,ignore,in,index,infile,inner,insert,insert_id,int,integer,interval,int1,int2,int3,int4,int8,into,if,is,isam,join,key,keys,kill,last_insert_id,leading,left,length,like,lines,limit,load,local,lock,logs,long,longblob,longtext,low_priority,max,max_rows,match,mediumblob,mediumtext,mediumint,middleint,min_rows,minute,minute_second,modify,month,monthname,myisam,natural,numeric,no,not,null,on,optimize,option,optionally,or,order,outer,outfile,pack_keys,partial,password,precision,primary,procedure,process,processlist,privileges,read,real,references,reload,regexp,rename,replace,restrict,returns,revoke,rlike,row,rows,second,select,set,show,shutdown,smallint,soname,sql_big_tables,sql_big_selects,sql_low_priority_updates,sql_log_off,sql_log_update,sql_select_limit,sql_small_result,sql_big_result,sql_warnings,straight_join,starting,status,string,table,tables,temporary,terminated,text,then,time,timestamp,tinyblob,tinytext,tinyint,trailing,to,type,use,using,unique,unlock,unsigned,update,usage,values,varchar,variables,varying,varbinary,with,write,when,where,year,year_month,zerofill\".split(\",\");\nreturn sysWords.indexOf(data.field.defKey.toLowerCase())<0;",
      "enable": true
    },
    {
      "id": "082E186D-7B02-4F1C-9ECE-378AB98C4845",
      "defName": "字段-全小写",
      "intro": "",
      "controlIntensity": "S",
      "applyObjectType": "P",
      "applyFieldType": "field",
      "programCode": "return !/[A-Z]+/.test(data.field.defKey);",
      "enable": true
    },
    {
      "id": "F3CE5C67-23B6-4E7B-BA91-D5F0BCBC9E6A",
      "defName": "字段-不允许空格",
      "intro": "",
      "controlIntensity": "F",
      "applyObjectType": "P",
      "applyFieldType": "field",
      "programCode": "return !/\\s+/.test(data.field.defKey);",
      "enable": true
    },
    {
      "id": "21AFEAC8-96D7-467F-8320-A33887FC0C5D",
      "defName": "字段-英文及下划线",
      "intro": "",
      "controlIntensity": "F",
      "applyObjectType": "P",
      "applyFieldType": "field",
      "programCode": "return /^[a-zA-Z_][a-zA-Z0-9_]*$/.test(data.field.defKey);",
      "enable": true
    },
    {
      "id": "2BBDE47B-6926-4E1A-AE57-D4F6E5399EE6",
      "defName": "字段-必需有comment注释",
      "intro": "",
      "controlIntensity": "F",
      "applyObjectType": "P",
      "applyFieldType": "field",
      "programCode": "return (data.field.defName||\"\").length > 0 || (data.field.comment||\"\").length > 0",
      "enable": true
    },
    {
      "id": "5E181E43-0D72-498F-8178-4C1CDBC89A16",
      "defName": "字段-不能与表名相同",
      "intro": "",
      "controlIntensity": "F",
      "applyObjectType": "P",
      "applyFieldType": "field",
      "programCode": "return data.field.defKey != data.entity.defKey;",
      "enable": true
    },
    {
      "id": "DE8F8598-5D53-4727-A837-7816C2AF99D9",
      "defName": "外键-字段必须具有表名及其主键",
      "intro": "",
      "controlIntensity": "S",
      "applyObjectType": "P",
      "applyFieldType": "field",
      "programCode": "let relas = data.entity.correlations;\nfor(let i=0;i<relas.length;i++){\n    let rela = relas[i];\n    if(data.field.defKey==rela.myField&&rela.myRows==\"n\"){\n        if(rela.myField==(rela.refEntity+\"_\"+rela.refField)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n}\nreturn true;",
      "enable": true
    },
    {
      "id": "D330BCC3-DBAB-4677-8C5A-A301003A5878",
      "defName": "时间字段类型尽量选取 timestamp",
      "intro": "",
      "controlIntensity": "S",
      "applyObjectType": "P",
      "applyFieldType": "field",
      "programCode": "if(data.field.defName.lastIndexOf(\"日期\")>=0 || data.field.defName.lastIndexOf(\"时间\")>=0 ){\n    if(data.field.dbType.toLowerCase().indexOf(\"date\")>=0){\n        return true;\n    }else{\n        return false;\n    }\n};\nreturn true;",
      "enable": true
    },
    {
      "id": "2E7FDA44-989A-4C5B-A0C5-12B1E40E57B1",
      "defName": "索引名-英文及下划线",
      "intro": "",
      "controlIntensity": "S",
      "applyObjectType": "P",
      "applyFieldType": "index",
      "programCode": "return /^[a-zA-Z_][a-zA-Z0-9_]*$/.test(data.index.defKey);",
      "enable": true
    },
    {
      "id": "023450B3-AAE2-4DC1-AE63-2196DD82823D",
      "defName": "索引名-主键的名称以pk_开头，唯一键以uk_开头，普通索引以 ix_开头",
      "intro": "",
      "controlIntensity": "S",
      "applyObjectType": "P",
      "applyFieldType": "index",
      "programCode": "if(data.index.unique){\n    return data.index.defKey.indexOf(\"uk_\")==0;\n}else{\n    return data.index.defKey.indexOf(\"ix_\")==0;\n}",
      "enable": true
    },
    {
      "id": "1C563E17-262B-4EB6-87F0-203CAC667CF0",
      "defName": "不允许存在blob、text等大字段",
      "intro": "",
      "controlIntensity": "S",
      "applyObjectType": "P",
      "applyFieldType": "field",
      "programCode": "if(\"blob,text\".indexOf(data.field.dbType.toLowerCase())>=0){\n    return false;\n}\nreturn true;",
      "enable": true
    }
  ]
}